# -*- coding: utf-8 -*-
# We will randomly define initial values for connection weights, and also randomly select
#   which training data that we will use for a given run.
import random
from random import randint

# We want to use the exp function (e to the x); it's part of our transfer function definition
from math import exp

# Biting the bullet and starting to use NumPy for arrays
import numpy as np

# So we can make a separate list from an initial one
import copy

# For pretty-printing the arrays
np.set_printoptions(precision=3)
np.set_printoptions(suppress=True) 

####################################################################################################
####################################################################################################
#
# This is a tutorial program, designed for those who are learning Python, and specifically using 
#   Python for neural networks applications
#
#
####################################################################################################
####################################################################################################
#
# Code Map: List of Procedures / Functions
# - welcome
#
# == set of basic functions ==
# - computeTransferFnctn
# - computeTransferFnctnDeriv
# - matrixDotProduct
#
# == identify crucial parameters (these can be changed by the user)
#    obtainNeuralNetworkSizeSpecs
#
#    -- initializeWeight
# - initializeWeightArray
# - initializeBiasWeightArray
#
# == obtain the training data (two possible routes; user selection & random)
# - obtainSelectedAlphabetTrainingValues
# - obtainRandomAlphabetTrainingValues
#
# == the feedforward modules
#   -- ComputeSingleFeedforwardPassFirstStep
#   -- ComputeSingleFeedforwardPassSecondStep
# - ComputeOutputsAcrossAllTrainingData
#
# == the backpropagation training modules
# - backpropagateOutputToHidden
# - backpropagateBiasOutputWeights
# - backpropagateHiddenToInput
# - backpropagateBiasHiddenWeights
# - main




####################################################################################################
####################################################################################################
#
# Procedure to welcome the user and identify the code
#
####################################################################################################
####################################################################################################


def welcome ():


    print
    print '******************************************************************************'
    print
    print 'Welcome to the Multilayer Perceptron Neural Network'
    print '  trained using the backpropagation method.'
    print 'Version 0.4, 03/05/2017, A.J. Maren'
    print 'For comments, questions, or bug-fixes, contact: alianna.maren@northwestern.edu'
    print ' ' 
    print 'This program learns to distinguish between broad classes of capital letters'
    print 'It allows users to examine the hidden weights to identify learned features'
    print
    print '******************************************************************************'
    print
    return()

        

####################################################################################################
####################################################################################################
#
# A collection of worker-functions, designed to do specific small tasks
#
####################################################################################################
####################################################################################################

   
#------------------------------------------------------#    

# Compute neuron activation using sigmoid transfer function
def computeTransferFnctn(summedNeuronInput, alpha):
    activation = 1.0 / (1.0 + exp(-alpha*summedNeuronInput)) 
    return activation
  

#------------------------------------------------------# 
    
# Compute derivative of transfer function
def computeTransferFnctnDeriv(NeuronOutput, alpha):
    return alpha*NeuronOutput*(1.0 -NeuronOutput)     


#------------------------------------------------------# 
def matrixDotProduct (matrx1,matrx2):
    dotProduct = np.dot(matrx1,matrx2)
    
    return(dotProduct)    


####################################################################################################
####################################################################################################
#
# Function to obtain the neural network size specifications
#
####################################################################################################
####################################################################################################

def obtainNeuralNetworkSizeSpecs ():

# This procedure operates as a function, as it returns a single value (which really is a list of 
#    three values). It is called directly from 'main.'
#        
# This procedure allows the user to specify the size of the input (I), hidden (H), 
#    and output (O) layers.  
# These values will be stored in a list, the arraySizeList. 
# This list will be used to specify the sizes of two different weight arrays:
#   - wWeights; the Input-to-Hidden array, and
#   - vWeights; the Hidden-to-Output array. 
# However, even though we're calling this procedure, we will still hard-code the array sizes for now.   

    numInputNodes = 121
    numHiddenNodes = 6
    numOutputNodes = 5  
    print ' '
    print '  The number of nodes at each level are:'
    print '    Input: 9x9 (square array)'
    print '    Hidden: ', numHiddenNodes
    print '    Output: ', numOutputNodes
            
# We create a list containing the crucial SIZES for the connection weight arrays                
    arraySizeList = (numInputNodes, numHiddenNodes, numOutputNodes)
    
# We return this list to the calling procedure, 'main'.       
    return (arraySizeList)  


####################################################################################################
#
# Function to initialize a specific connection weight with a randomly-generated number between 0 & 1
#
####################################################################################################

def InitializeWeight ():

    randomNum = random.random()
    weight=1-2*randomNum
#    print weight
           
    return (weight)  



####################################################################################################
####################################################################################################
#
# Function to initialize the node-to-node connection weight arrays
#
####################################################################################################
####################################################################################################

def initializeWeightArray (weightArraySizeList):

# This procedure is also called directly from 'main.'
#        
# This procedure takes in the two parameters, the number of nodes on the bottom (of any two layers), 
#   and the number of nodes in the layer just above it. 
#   It will use these two sizes to create a weight array.
# The weights will initially be assigned random values here, and 
#   this array is passed back to the 'main' procedure. 

    
    numLowerNodes = weightArraySizeList[0] 
    numUpperNodes = weightArraySizeList[1] 
    
#    print ' '
#    print ' inside procedure initializeWeightArray'
#    print ' the number of lower nodes is', numLowerNodes
#    print ' the number of upper nodes is', numUpperNodes    
#
# Initialize the weight variables with random weights    
    weightArray = np.zeros((numUpperNodes,numLowerNodes))    # iniitalize the weight matrix with 0's
    for row in range(numUpperNodes):  #  Number of rows in weightMatrix
        # For an input-to-hidden weight matrix, the rows correspond to the number of hidden nodes
        #    and the columns correspond to the number of input nodes.
        #    This creates an HxI matrix, which can be multiplied by the input matrix (expressed as a column)
        # Similarly, for a hidden-to-output matrix, the rows correspond to the number of output nodes.
        for col in range(numLowerNodes):  # number of columns in matrix 2
            weightArray[row,col] = InitializeWeight ()
            
#    print weightArray                  
    
# We return the array to the calling procedure, 'main'.       
    return (weightArray)  


####################################################################################################
####################################################################################################
#
# Function to initialize the bias weight arrays
#
####################################################################################################
####################################################################################################

def initializeBiasWeightArray (numBiasNodes):

# This procedure is also called directly from 'main.'

# Initialize the bias weight variables with random weights    
    biasWeightArray = np.zeros(numBiasNodes)    # iniitalize the weight matrix with 0's
    for node in range(numBiasNodes):  #  Number of nodes in bias weight set
        biasWeightArray[node] = InitializeWeight ()
                  
# Print the entire weights array. 
#    print biasWeightArray
                  
    
# We return the array to the calling procedure, 'main'.       
    return (biasWeightArray)  




####################################################################################################
####################################################################################################
#
# Function to return a trainingDataList
#
####################################################################################################
####################################################################################################

def obtainSelectedAlphabetTrainingValues (dataSet):
    
########
#  A   #
########

    trainingDataListA0 =  (1,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,0,0,0,0,0,0, 
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],0,'A',2,'F') # training data list bottom left 'A' variant 1
    
    trainingDataListA1 =  (27,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,1,0,0,0,0,0, 
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],0,'A',2,'F') # training data list bottom center 'A' variant 1

    trainingDataListA2 =  (28,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,1,0,0,0,0, 
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],0,'A',2,'F') # training data list bottom right 'A' variant 1  
    

    trainingDataListA3 =  (29,[
    0,0,0,0,1,0,0,0,0,0,0, 
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,
    ],0,'A',2,'F') # training data list top left 'A' variant 1
    
    trainingDataListA4 =  (30,[
    0,0,0,0,0,1,0,0,0,0,0, 
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],0,'A',2,'F') # training data list top center 'A' variant 1

    trainingDataListA5 =  (31,[
    0,0,0,0,0,0,1,0,0,0,0, 
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],0,'A',2,'F') # training data list top right 'A' variant 1    
    
           
    trainingDataListA6 =  (32,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,0,0,0,0,0,0, 
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],0,'A',2,'F') # training data list bottom left 'A' variant 2
    
    trainingDataListA7 =  (33,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,1,0,0,0,0,0, 
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,    
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],0,'A',2,'F') # training data list bottom center 'A' variant 2

    trainingDataListA8 =  (34,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,1,0,0,0,0, 
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,    
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],0,'A',2,'F') # training data list bottom right 'A' variant 2 
    

    trainingDataListA9 =  (35,[
    0,0,0,0,1,0,0,0,0,0,0, 
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,   
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,
    ],0,'A',2,'F') # training data list top left 'A' variant 2
    
    trainingDataListA10 =  (36,[
    0,0,0,0,0,1,0,0,0,0,0, 
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,    
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],0,'A',2,'F') # training data list top center 'A' variant 2

    trainingDataListA11 =  (37,[
    0,0,0,0,0,0,1,0,0,0,0, 
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,    
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],0,'A',2,'F') # training data list top right 'A' variant 2          
              

########
#  B   #
########                        

    trainingDataListB0 =  (2,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0, 
    ],1,'B',0,'L') # training data list bottom left 'B' variant 1
    
    trainingDataListB1 =  (38,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0, 
    ],1,'B',0,'L') # training data list bottom center 'B' variant 1

    trainingDataListB2 =  (39,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0, 
    ],1,'B',0,'L') # training data list bottom right 'B' variant 1  
            
    trainingDataListB3 =  (40,[
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],1,'B',0,'L') # training data list top left 'B' variant 1
    
    trainingDataListB4 =  (41,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],1,'B',0,'L') # training data list top center 'B' variant 1

    trainingDataListB5 =  (42,[
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],1,'B',0,'L') # training data list top right 'B' variant 1     
    
    trainingDataListB6 =  (43,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,1,1,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0, 
    ],1,'B',0,'L') # training data list bottom left 'B' variant 2
    
    trainingDataListB7 =  (44,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,1,1,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0, 
    ],1,'B',0,'L') # training data list bottom center 'B' variant 2

    trainingDataListB8 =  (45,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,1,1,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0, 
    ],1,'B',0,'L') # training data list bottom right 'B' variant 2    
    
    trainingDataListB9 =  (46,[
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,1,1,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],1,'B',0,'L') # training data list top left 'B' variant 2
    
    trainingDataListB10 =  (47,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,1,1,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],1,'B',0,'L') # training data list top center 'B' variant 2

    trainingDataListB11 =  (48,[
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,1,1,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],1,'B',0,'L') # training data list top right 'B' variant 2   
    
    

########
#  C   #
########                        

    trainingDataListC0 =  (3,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],2,'C',1,'O')  # training data list bottom left 'C' variant 1
    
    trainingDataListC1 =  (49,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],2,'C',1,'O')  # training data list bottom center 'C' variant 1

    trainingDataListC2 =  (50,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],2,'C',1,'O')  # training data list bottom right 'C' variant 1  
            
    trainingDataListC3 =  (51,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],2,'C',1,'O')  # training data list top left 'C' variant 1
    
    trainingDataListC4 =  (52,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],2,'C',1,'O')  # training data list top center 'C' variant 1

    trainingDataListC5 =  (53,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],2,'C',1,'O')  # training data list top right 'C' variant 1  
    
    trainingDataListC6 =  (54,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],2,'C',1,'O')  # training data list bottom left 'C' variant 2
    
    trainingDataListC7 =  (55,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],2,'C',1,'O')  # training data list bottom center 'C' variant 2

    trainingDataListC8 =  (56,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],2,'C',1,'O')  # training data list bottom right 'C' variant 2  
            
    trainingDataListC9 =  (57,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],2,'C',1,'O')  # training data list top left 'C' variant 2
    
    trainingDataListC10 =  (58,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],2,'C',1,'O')  # training data list top center 'C' variant 2

    trainingDataListC11 =  (59,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],2,'C',1,'O')  # training data list top right 'C' variant 2 
    
    
########
#  D   #
########                        

    trainingDataListD0 =  (4,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0, 
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0, 
    ],3,'D',1,'O')  # training data list bottom left 'D' variant 1
    
    trainingDataListD1 =  (60,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],3,'D',1,'O')  # training data list bottom center 'D' variant 1

    trainingDataListD2 =  (61,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],3,'D',1,'O')  # training data list bottom right 'D' variant 1      
    
    trainingDataListD3 =  (62,[
    1,1,1,1,1,1,1,0,0,0,0, 
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],3,'D',1,'O')  # training data list top left 'D' variant 1
    
    trainingDataListD4 =  (63,[ 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],3,'D',1,'O')  # training data list top center 'D' variant 1

    trainingDataListD5 =  (64,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],3,'D',1,'O')  # training data list top right 'D' variant 1                     
    
    trainingDataListD6 =  (65,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0, 
    1,0,0,0,0,0,1,1,0,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,1,1,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0, 
    ],3,'D',1,'O')  # training data list bottom left 'D' variant 2
    
    trainingDataListD7 =  (66,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],3,'D',1,'O')  # training data list bottom center 'D' variant 2

    trainingDataListD8 =  (67,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,1,0,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],3,'D',1,'O')  # training data list bottom right 'D' variant 2     
    
    trainingDataListD9 =  (68,[
    1,1,1,1,1,1,1,0,0,0,0, 
    1,0,0,0,0,0,1,1,0,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,1,1,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],3,'D',1,'O')  # training data list top left 'D' variant 2
    
    trainingDataListD10 =  (69,[ 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],3,'D',1,'O')  # training data list top center 'D' variant 2

    trainingDataListD11 =  (70,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,1,0,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],3,'D',1,'O')  # training data list top right 'D' variant 2                     


########
#  E   #
########                        

    trainingDataListE0 =  (5,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0, 
    ],4,'E',0,'L')  # training data list bottom left 'E' variant 1
    
    trainingDataListE1 =  (71,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0, 
    ],4,'E',0,'L')  # training data list bottom center 'E' variant 1

    trainingDataListE2 =  (72,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1, 
    ],4,'E',0,'L')  # training data list bottom right 'E' variant 1 
    
    trainingDataListE3 =  (73,[ 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],4,'E',0,'L')  # training data list top left 'E' variant 1
    
    trainingDataListE4 =  (74,[
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],4,'E',0,'L')  # training data list top center 'E' variant 1

    trainingDataListE5 =  (75,[ 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],4,'E',0,'L')  # training data list top right 'E' variant 1              
                      
    trainingDataListE6 =  (76,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0, 
    ],4,'E',0,'L')  # training data list bottom left 'E' variant 2
    
    trainingDataListE7 =  (77,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0, 
    ],4,'E',0,'L')  # training data list bottom center 'E' variant 2

    trainingDataListE8 =  (78,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1, 
    ],4,'E',0,'L')  # training data list bottom right 'E' variant 2 
    
    trainingDataListE9 =  (79,[ 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],4,'E',0,'L')  # training data list top left 'E' variant 2
    
    trainingDataListE10 =  (80,[
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],4,'E',0,'L')  # training data list top center 'E' variant 2

    trainingDataListE11 =  (81,[ 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],4,'E',0,'L')  # training data list top right 'E' variant 2                                             
                                        
########
#  F   #
########                        

    trainingDataListF0 =  (6,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list bottom left 'F' variant 1
    
    trainingDataListF1 =  (82,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list bottom center 'F' variant 1

    trainingDataListF2 =  (83,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F') # training data list bottom right 'F' variant 1 
    
    trainingDataListF3 =  (84,[ 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],5,'F',2,'F')  # training data list top left 'F' variant 1
    
    trainingDataListF4 =  (85,[
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list top center 'F' variant 1

    trainingDataListF5 =  (86,[ 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],5,'F',2,'F')  # training data list top right 'F' variant 1              
                      
    trainingDataListF6 =  (87,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list bottom left 'F' variant 2
    
    trainingDataListF7 =  (88,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list bottom center 'F' variant 2

    trainingDataListF8 =  (89,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list bottom right 'F' variant 2 
    
    trainingDataListF9 =  (90,[ 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],5,'F',2,'F')  # training data list top left 'F' variant 2
    
    trainingDataListF10 =  (91,[
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F') # training data list top center 'F' variant 2

    trainingDataListF11 =  (92,[ 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],5,'F',2,'F')  # training data list top right 'F' variant 2                                                     


########
#  G   #
########                        

    trainingDataListG0 =  (7,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],6,'G',1,'O')  # training data list bottom left 'G' variant 1
    
    trainingDataListG1 =  (93,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],6,'G',1,'O')  # training data list bottom center 'G' variant 1

    trainingDataListG2 =  (94,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],6,'G',1,'O')  # training data list bottom right 'G' variant 1  
            
    trainingDataListG3 =  (95,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],6,'G',1,'O')  # training data list top left 'G' variant 1
    
    trainingDataListG4 =  (96,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],6,'G',1,'O')  # training data list top center 'G' variant 1

    trainingDataListG5 =  (97,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],6,'G',1,'O')  # training data list top right 'G' variant 1  
    
    trainingDataListG6 =  (98,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],6,'G',1,'O')  # training data list bottom left 'G' variant 2
    
    trainingDataListG7 =  (99,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],6,'G',1,'O')  # training data list bottom center 'G' variant 2

    trainingDataListG8 =  (100,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],6,'G',1,'O')  # training data list bottom right 'G' variant 2  
            
    trainingDataListG9 =  (101,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],6,'G',1,'O')  # training data list top left 'G' variant 2
    
    trainingDataListG10 =  (102,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],6,'G',1,'O')  # training data list top center 'G' variant 2

    trainingDataListG11 =  (103,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],6,'G',1,'O')  # training data list top right 'C' variant 2 
    
########
#  H   #
########     

    trainingDataListH0 =  (8,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],7,'H',4,'N') # training data list bottom left 'H' variant 1
    
    trainingDataListH1 =  (104,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],7,'H',4,'N') # training data list bottom center 'H' variant 1

    trainingDataListH2 =  (105,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],7,'H',4,'N') # training data list bottom right 'H' variant 1  

    trainingDataListH3 =  (106,[
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],7,'H',4,'N') # training data list top left 'H' variant 1
    
    trainingDataListH4 =  (107,[
    0,1,0,0,0,0,0,0,0,1,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],7,'H',4,'N') # training data list top center 'H' variant 1

    trainingDataListH5 =  (108,[ 
    0,0,1,0,0,0,0,0,0,0,1, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],7,'H',4,'N') # training data list top right 'H' variant 1     
    
    trainingDataListH6 =  (109,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    ],7,'H',4,'N') # training data list bottom left 'H' variant 2
    
    trainingDataListH7 =  (110,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    ],7,'H',4,'N') # training data list bottom center 'H' variant 2

    trainingDataListH8 =  (111,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,1,1,1,1,1,1,
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    ],7,'H',4,'N') # training data list bottom right 'H' variant 2  

    trainingDataListH9 =  (112,[
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],7,'H',4,'N') # training data list top left 'H' variant 2
    
    trainingDataListH10 =  (113,[
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],7,'H',4,'N') # training data list top center 'H' variant 2

    trainingDataListH11 =  (114,[
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,1,1,1,1,1,1,
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],7,'H',4,'N') # training data list top right 'H' variant 2   
        
                
########
#  I   #
########     

    trainingDataListI0 =  (9,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    1,1,1,1,1,0,0,0,0,0,0,
    ],8,'I',2,'F') # training data list bottom left 'I' variant 1
    
    trainingDataListI1 =  (115,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,1,1,1,1,1,0,0,0,
    ],8,'I',2,'F') # training data list bottom center 'I' variant 1

    trainingDataListI2 =  (116,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,1,1,1,1,1, 
    ],8,'I',2,'F') # training data list bottom right 'I' variant 1  

    trainingDataListI3 =  (117,[ 
    1,1,1,1,1,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    1,1,1,1,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],8,'I',2,'F') # training data list top left 'I' variant 1
    
    trainingDataListI4 =  (118,[
    0,0,0,1,1,1,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,1,1,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],8,'I',2,'F') # training data list top center 'I' variant 1

    trainingDataListI5 =  (119,[
    0,0,0,0,0,0,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],8,'I',2,'F') # training data list bottom right 'I' variant 1  
    
    trainingDataListI6 =  (120,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    ],8,'I',2,'F') # training data list bottom left 'I' variant 2
    
    trainingDataListI7 =  (121,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    ],8,'I',2,'F') # training data list bottom center 'I' variant 2

    trainingDataListI8 =  (122,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,1,1,1,1,1,1,1, 
    ],8,'I',2,'F') # training data list bottom right 'I' variant 2 

    trainingDataListI9 =  (123,[
    1,1,1,1,1,1,1,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],8,'I',2,'F') # training data list top left 'I' variant 2
    
    trainingDataListI10 =  (124,[ 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],8,'I',2,'F') # training data list top center 'I' variant 2

    trainingDataListI11 =  (125,[ 
    0,0,0,0,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],8,'I',2,'F') # training data list top right 'I' variant 2 
    
########
#  J   #
########     

    trainingDataListJ0 =  (10,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,1,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    ],9,'J',1,'O') # training data list bottom left 'J' variant 1
    
    trainingDataListJ1 =  (126,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    ],9,'J',1,'O') # training data list bottom center 'J' variant 1

    trainingDataListJ2 =  (127,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,0,1,1,1,0,0,
    ],9,'J',1,'O') # training data list bottom right 'J' variant 1  
    
    trainingDataListJ3 =  (128,[ 
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,1,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],9,'J',1,'O') # training data list top left 'J' variant 1
    
    trainingDataListJ4 =  (129,[ 
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],9,'J',1,'O') # training data list top center 'J' variant 1

    trainingDataListJ5 =  (130,[ 
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,0,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],9,'J',1,'O') # training data list top right 'J' variant 1     
    
    trainingDataListJ6 =  (131,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,0,0,0,0,1,1,0,0,0,
    0,1,1,0,0,1,1,0,0,0,0,
    0,0,1,1,1,1,0,0,0,0,0,
    ],9,'J',1,'O') # training data list bottom left 'J' variant 2
    
    trainingDataListJ7 =  (132,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,1,0,0,0,0,1,1,0,
    0,0,0,1,1,0,0,1,1,0,0,
    0,0,0,0,1,1,1,1,0,0,0,
    ],9,'J',1,'O') # training data list bottom center 'J' variant 2

    trainingDataListJ8 =  (133,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,0,1,
    0,0,0,1,1,0,0,0,0,1,1,
    0,0,0,0,1,1,0,0,1,1,0,
    0,0,0,0,0,1,1,1,1,0,0,
    ],9,'J',1,'O') # training data list bottom right 'J' variant 2  
    
    trainingDataListJ9 =  (134,[
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,0,0,0,0,1,1,0,0,0,
    0,1,1,0,0,1,1,0,0,0,0,
    0,0,1,1,1,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],9,'J',1,'O') # training data list top left 'J' variant 2
    
    trainingDataListJ10 =  (135,[
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,1,0,0,0,0,1,1,0,
    0,0,0,1,1,0,0,1,1,0,0,
    0,0,0,0,1,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],9,'J',1,'O') # training data list top center 'J' variant 2

    trainingDataListJ11 =  (136,[
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,0,1,
    0,0,0,1,1,0,0,0,0,1,1,
    0,0,0,0,1,1,0,0,1,1,0,
    0,0,0,0,0,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],9,'J',1,'O') # training data list topright 'J' variant 2
   
########
#  K   #
########     

    trainingDataListK0 =  (11,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,1,1,0,0,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    ],10,'K',3,'X') # training data list bottom left 'K' variant 1
    
    trainingDataListK1 =  (137,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    ],10,'K',3,'X') # training data list bottom center 'K' variant 1

    trainingDataListK2 =  (138,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,1,0,0,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,1,0,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,1,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,0,0,1,
    ],10,'K',3,'X') # training data list bottom right 'K' variant 1
    
    trainingDataListK3 =  (139,[
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,1,1,0,0,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],10,'K',3,'X') # training data list top left 'K' variant 1
    
    trainingDataListK4 =  (140,[
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],10,'K',3,'X') # training data list top center 'K' variant 1

    trainingDataListK5 =  (141,[
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,1,0,0,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,1,0,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,1,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],10,'K',3,'X') # training data list top right 'K' variant 1
     
    trainingDataListK6 =  (142,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,1,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    1,0,1,0,0,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    ],10,'K',3,'X') # training data list bottom left 'K' variant 2
    
    trainingDataListK7 =  (143,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,1,0,1,0,0,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    ],10,'K',3,'X') # training data list bottom center 'K' variant 2

    trainingDataListK8 =  (144,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,1,0,0,0,0,1,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,1,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,1,0,0,1,0,0,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,1,0,0,0,0,1,
    ],10,'K',3,'X') # training data list bottom right 'K' variant 2      
         
    trainingDataListK9 =  (145,[
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,1,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    1,0,1,0,0,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],10,'K',3,'X') # training data list top left 'K' variant 2
    
    trainingDataListK10 =  (146,[
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,1,0,1,0,0,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],10,'K',3,'X') # training data list top center 'K' variant 2

    trainingDataListK11 =  (147,[
    0,0,0,0,0,1,0,0,0,0,1,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,1,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,1,0,0,1,0,0,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,1,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],10,'K',3,'X') # training data list top right 'K' variant 2    
    
########
#  L   #
########     

    trainingDataListL0 =  (12,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    ],11,'L',0,'L') # training data list bottom left 'L' variant 1
    
    trainingDataListL1 =  (148,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    ],11,'L',0,'L') # training data list bottom center 'L' variant 1

    trainingDataListL2 =  (149,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    ],11,'L',0,'L') # training data list bottom right 'L' variant 1    
    
    trainingDataListL3 =  (150,[
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],11,'L',0,'L') # training data list top left 'L' variant 1
    
    trainingDataListL4 =  (151,[ 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],11,'L',0,'L') # training data list top center 'L' variant 1

    trainingDataListL5 =  (152,[ 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],11,'L',0,'L') # training data list top right 'L' variant 1  
    
    trainingDataListL6 =  (153,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    ],11,'L',0,'L') # training data list bottom left 'L' variant 2
    
    trainingDataListL7 =  (154,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    ],11,'L',0,'L') # training data list bottom center 'L' variant 2

    trainingDataListL8 =  (155,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,1,1,1,1,1,1,
    ],11,'L',0,'L') # training data list bottom right 'L' variant 2  
    
    trainingDataListL9 =  (156,[ 
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],11,'L',0,'L') # training data list top left 'L' variant 2
    
    trainingDataListL10 =  (157,[ 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],11,'L',0,'L') # training data list top center 'L' variant 2

    trainingDataListL11 =  (158,[
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],11,'L',0,'L') # training data list bottom right 'L' variant 2  
                    
########
#  M   #
########     

    trainingDataListM0 =  (13,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,1,0,0,0,1,0,1,0,0,
    1,0,0,1,0,1,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],12,'M',4,'N') # training data list bottom left 'M' variant 1
    
    trainingDataListM1 =  (159,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,1,0,0,0,1,0,1,0,
    0,1,0,0,1,0,1,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],12,'M',4,'N') # training data list bottom center 'M' variant 1

    trainingDataListM2 =  (160,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,1,0,0,0,1,0,1,
    0,0,1,0,0,1,0,1,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],12,'M',4,'N') # training data list bottom right 'M' variant 1    
         
    trainingDataListM3 =  (161,[
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,1,0,0,0,1,0,1,0,0,
    1,0,0,1,0,1,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],12,'M',4,'N') # training data list top left 'M' variant 1
    
    trainingDataListM4 =  (162,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,1,0,0,0,1,0,1,0,
    0,1,0,0,1,0,1,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],12,'M',4,'N') # training data list top center 'M' variant 1

    trainingDataListM5 =  (163,[
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,1,0,0,0,1,0,1,
    0,0,1,0,0,1,0,1,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],12,'M',4,'N') # training data list bottom right 'M' variant 1  
   
    trainingDataListM6 =  (164,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,1,0,0,0,
    1,1,1,0,0,0,1,1,1,0,0,
    1,0,1,1,0,1,1,0,1,0,0,
    1,0,0,1,1,1,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],12,'M',4,'N') # training data list bottom left 'M' variant 2
    
    trainingDataListM7 =  (165,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,1,1,0,0,0,1,1,1,0,
    0,1,0,1,1,0,1,1,0,1,0,
    0,1,0,0,1,1,1,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],12,'M',4,'N') # training data list bottom center 'M' variant 2

    trainingDataListM8 =  (166,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,1,1,0,0,0,1,1,1,
    0,0,1,0,1,1,0,1,1,0,1,
    0,0,1,0,0,1,1,1,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],12,'M',4,'N') # training data list bottom right 'M' variant 1         
         
    trainingDataListM9 =  (167,[ 
    0,1,0,0,0,0,0,1,0,0,0,
    1,1,1,0,0,0,1,1,1,0,0,
    1,0,1,1,0,1,1,0,1,0,0,
    1,0,0,1,1,1,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],12,'M',4,'N') # training data list top left 'M' variant 2
    
    trainingDataListM10 =  (168,[
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,1,1,0,0,0,1,1,1,0,
    0,1,0,1,1,0,1,1,0,1,0,
    0,1,0,0,1,1,1,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],12,'M',4,'N') # training data list top center 'M' variant 2

    trainingDataListM11 =  (169,[ 
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,1,1,0,0,0,1,1,1,
    0,0,1,0,1,1,0,1,1,0,1,
    0,0,1,0,0,1,1,1,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],12,'M',4,'N') # training data list top right 'M' variant 1               
                  

########
#  N   #
########     

    trainingDataListN0 =  (14,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,0,1,0,0,
    1,0,1,0,0,0,0,0,1,0,0,
    1,0,0,1,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],13,'N',4,'N') # training data list bottom left 'N' variant 1
    
    trainingDataListN1 =  (170,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,0,1,0,
    0,1,0,1,0,0,0,0,0,1,0,
    0,1,0,0,1,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],13,'N',4,'N') # training data list bottom center 'N' variant 1

    trainingDataListN2 =  (171,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,0,1,
    0,0,1,0,1,0,0,0,0,0,1,
    0,0,1,0,0,1,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],13,'N',4,'N') # training data list bottom right 'N' variant 1    

    trainingDataListN3 =  (172,[ 
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,0,1,0,0,
    1,0,1,0,0,0,0,0,1,0,0,
    1,0,0,1,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],13,'N',4,'N') # training data list top left 'N' variant 1
    
    trainingDataListN4 =  (173,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,0,1,0,
    0,1,0,1,0,0,0,0,0,1,0,
    0,1,0,0,1,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],13,'N',4,'N') # training data list top center 'N' variant 1

    trainingDataListN5 =  (174,[
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,0,1,
    0,0,1,0,1,0,0,0,0,0,1,
    0,0,1,0,0,1,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],13,'N',4,'N') # training data list top right 'N' variant 1   

    trainingDataListN6 =  (175,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,0,0,0,0,0,1,0,0,0,
    1,1,1,0,0,0,0,1,0,0,0,
    1,0,1,1,0,0,0,1,0,0,0,
    1,0,0,1,1,0,0,1,0,0,0,
    1,0,0,0,1,1,0,1,0,0,0,
    1,0,0,0,0,1,1,1,0,0,0,
    1,0,0,0,0,0,1,1,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    ],13,'N',4,'N') # training data list bottom left 'N' variant 2
    
    trainingDataListN7 =  (176,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,1,0,0,0,0,0,1,0,0,
    0,1,1,1,0,0,0,0,1,0,0,
    0,1,0,1,1,0,0,0,1,0,0,
    0,1,0,0,1,1,0,0,1,0,0,
    0,1,0,0,0,1,1,0,1,0,0,
    0,1,0,0,0,0,1,1,1,0,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    ],13,'N',4,'N') # training data list bottom center 'N' variant 2

    trainingDataListN8 =  (177,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,0,1,
    0,0,0,1,1,0,0,0,0,0,1,
    0,0,0,1,1,1,0,0,0,0,1,
    0,0,0,1,0,1,1,0,0,0,1,
    0,0,0,1,0,0,1,1,0,0,1,
    0,0,0,1,0,0,0,1,1,0,1,
    0,0,0,1,0,0,0,0,1,1,1,
    0,0,0,1,0,0,0,0,0,1,1,
    0,0,0,1,0,0,0,0,0,0,1,
    ],13,'N',4,'N') # training data list bottom right 'N' variant 2    

    trainingDataListN9 =  (178,[
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,0,0,0,0,0,1,0,0,0,
    1,1,1,0,0,0,0,1,0,0,0,
    1,0,1,1,0,0,0,1,0,0,0,
    1,0,0,1,1,0,0,1,0,0,0,
    1,0,0,0,1,1,0,1,0,0,0,
    1,0,0,0,0,1,1,1,0,0,0,
    1,0,0,0,0,0,1,1,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],13,'N',4,'N') # training data list top left 'N' variant 2
    
    trainingDataListN10 =  (179,[ 
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,1,0,0,0,0,0,1,0,0,
    0,1,1,1,0,0,0,0,1,0,0,
    0,1,0,1,1,0,0,0,1,0,0,
    0,1,0,0,1,1,0,0,1,0,0,
    0,1,0,0,0,1,1,0,1,0,0,
    0,1,0,0,0,0,1,1,1,0,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],13,'N',4,'N') # training data list top center 'N' variant 2

    trainingDataListN11 =  (180,[ 
    0,0,0,1,0,0,0,0,0,0,1,
    0,0,0,1,1,0,0,0,0,0,1,
    0,0,0,1,1,1,0,0,0,0,1,
    0,0,0,1,0,1,1,0,0,0,1,
    0,0,0,1,0,0,1,1,0,0,1,
    0,0,0,1,0,0,0,1,1,0,1,
    0,0,0,1,0,0,0,0,1,1,1,
    0,0,0,1,0,0,0,0,0,1,1,
    0,0,0,1,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],13,'N',4,'N') # training data list top right 'N' variant 1    

########
#  O   #
########                        

    trainingDataListO0 =  (15,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],14,'O',1,'O')  # training data list bottom left 'O' variant 1
    
    trainingDataListO1 =  (181,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],14,'O',1,'O')  # training data list bottom center 'O' variant 1

    trainingDataListO2 =  (182,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],14,'O',1,'O')  # training data list bottom right 'O' variant 1  
    
    trainingDataListO3 =  (183,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],14,'O',1,'O')  # training data list top left 'O' variant 1
    
    trainingDataListO4 =  (184,[ 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],14,'O',1,'O')  # training data list top center 'O' variant 1

    trainingDataListO5 =  (185,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],14,'O',1,'O')  # training data list top right 'O' variant 1  

    trainingDataListO6 =  (186,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],14,'O',1,'O')  # training data list bottom left 'O' variant 2
    
    trainingDataListO7 =  (187,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],14,'O',1,'O')  # training data list bottom center 'O' variant 2

    trainingDataListO8 =  (188,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],14,'O',1,'O')  # training data list bottom right 'O' variant 2  
    
    trainingDataListO9 =  (189,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],14,'O',1,'O')  # training data list top left 'O' variant 2
    
    trainingDataListO10 =  (190,[ 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],14,'O',1,'O')  # training data list top center 'O' variant 2

    trainingDataListO11 =  (191,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],14,'O',1,'O')  # training data list top right 'O' variant 2  

########
#  P   #
########                        

    trainingDataListP0 =  (16,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F')  # training data list bottom left 'P' variant 1
    
    trainingDataListP1 =  (192,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F')  # training data list bottom center 'P' variant 1

    trainingDataListP2 =  (193,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F') # training data list bottom right 'P' variant 1 
    
    trainingDataListP3 =  (194,[ 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],15,'P',2,'F')  # training data list top left 'P' variant 1
    
    trainingDataListP4 =  (195,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],15,'P',2,'F')  # training data list top center 'P' variant 1

    trainingDataListP5 =  (196,[ 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F') # training data list top right 'P' variant 1 
                      
    trainingDataListP6 =  (197,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F')  # training data list bottom left 'P' variant 2
    
    trainingDataListP7 =  (198,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F')  # training data list bottom center 'P' variant 2

    trainingDataListP8 =  (199,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F') # training data list bottom right 'P' variant 2 
    
    trainingDataListP9 =  (200,[ 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],15,'P',2,'F')  # training data list top left 'P' variant 2
    
    trainingDataListP10 =  (201,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],15,'P',2,'F')  # training data list top center 'P' variant 2

    trainingDataListP11 =  (202,[ 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F') # training data list top right 'P' variant 2 
 
########
#  Q   #
########                        

    trainingDataListQ0 =  (17,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],16,'Q',1,'O') # training data list bottom left 'Q' variant 1
    
    trainingDataListQ1 =  (203,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],16,'Q',1,'O')  # training data list bottom center 'Q' variant 1

    trainingDataListQ2 =  (204,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],16,'Q',1,'O')  # training data list bottom right 'Q' variant 1  
    
    trainingDataListQ3 =  (205,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],16,'Q',1,'O')  # training data list top left 'Q' variant 1
    
    trainingDataListQ4 =  (206,[ 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],16,'Q',1,'O')  # training data list top center 'Q' variant 1

    trainingDataListQ5 =  (207,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],16,'Q',1,'O')  # training data list top right 'Q' variant 1  

    trainingDataListQ6 =  (208,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],16,'Q',1,'O') # training data list bottom left 'Q' variant 2
    
    trainingDataListQ7 =  (209,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],16,'Q',1,'O')  # training data list bottom center 'Q' variant 2

    trainingDataListQ8 =  (210,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],16,'Q',1,'O')  # training data list bottom right 'Q' variant 2  
    
    trainingDataListQ9 =  (211,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],16,'Q',1,'O')  # training data list top left 'Q' variant 2
    
    trainingDataListQ10 =  (212,[ 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],16,'Q',1,'O')  # training data list top center 'Q' variant 2

    trainingDataListQ11 =  (213,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],16,'Q',1,'O') # training data list top right 'Q' variant 2             
                               
########
#  R   #
########                        

    trainingDataListR0 =  (18,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0, 
    ],17,'R',2,'F')  # training data list bottom left 'R' variant 1
    
    trainingDataListR1 =  (214,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0, 
    ],17,'R',2,'F')  # training data list bottom center 'R' variant 1

    trainingDataListR2 =  (215,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1, 
    ],17,'R',2,'F') # training data list bottom right 'R' variant 1 
    
    trainingDataListR3 =  (216,[ 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],17,'R',2,'F')  # training data list top left 'R' variant 1
    
    trainingDataListR4 =  (217,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],17,'R',2,'F')  # training data list top center 'R' variant 1

    trainingDataListR5 =  (218,[ 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],17,'R',2,'F') # training data list top right 'R' variant 1 
                      
    trainingDataListR6 =  (219,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0, 
    ],17,'R',2,'F')  # training data list bottom left 'R' variant 2
    
    trainingDataListR7 =  (220,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0, 
    ],17,'R',2,'F')  # training data list bottom center 'R' variant 2

    trainingDataListR8 =  (221,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1, 
    ],17,'R',2,'F')  # training data list bottom right 'R' variant 2 
    
    trainingDataListR9 =  (222,[ 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],17,'R',2,'F')  # training data list top left 'R' variant 2
    
    trainingDataListR10 =  (223,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],17,'R',2,'F')  # training data list top center 'R' variant 2

    trainingDataListR11 =  (224,[ 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],17,'R',2,'F') # training data list top right 'R' variant 2   

########
#  S  #
########                        

    trainingDataListS0 =  (19,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],18,'S',1,'O')  # training data list bottom left 'S' variant 1
    
    trainingDataListS1 =  (225,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    ],18,'S',1,'O')  # training data list bottom center 'S' variant 1

    trainingDataListS2 =  (226,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,1,1,0,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    ],18,'S',1,'O') # training data list bottom right 'S' variant 1 
    
    trainingDataListS3 =  (227,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],18,'S',1,'O')  # training data list top left 'S' variant 1
    
    trainingDataListS4 =  (228,[ 
    0,0,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],18,'S',1,'O')  # training data list top center 'S' variant 1

    trainingDataListS5 =  (229,[ 
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,1,1,0,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],18,'S',1,'O') # training data list top right 'S' variant 1 
    
    trainingDataListS6 =  (230,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,1,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],18,'S',1,'O')  # training data list bottom left 'S' variant 2
    
    trainingDataListS7 =  (231,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0, 
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,0,1,1,1,0,0,
    0,0,0,0,0,0,0,0,1,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    ],18,'S',1,'O')  # training data list bottom center 'S' variant 2

    trainingDataListS8 =  (232,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,1,1,1,0,
    0,0,0,0,0,0,0,0,0,1,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,
    ],18,'S',1,'O') # training data list bottom right 'S' variant 2 
    
    trainingDataListS9 =  (233,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,1,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],18,'S',1,'O')  # training data list top left 'S' variant 2
    
    trainingDataListS10 =  (234,[  
    0,0,1,1,1,1,1,1,1,0,0, 
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,0,1,1,1,0,0,
    0,0,0,0,0,0,0,0,1,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],18,'S',1,'O')  # training data list top center 'S' variant 2

    trainingDataListS11 =  (235,[ 
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,1,1,1,0,
    0,0,0,0,0,0,0,0,0,1,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],18,'S',1,'O') # training data list top right 'S' variant 2 

########
#  T  #
########                        

    trainingDataListT0 =  (20,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0, 
    ],19,'T',2,'F')  # training data list bottom left 'T' variant 1
    
    trainingDataListT1 =  (236,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list bottom center 'T' variant 1

    trainingDataListT2 =  (237,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    ],19,'T',2,'F') # training data list bottom right 'T' variant 1   
    
    trainingDataListT3 =  (238,[ 
    1,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list top left 'T' variant 1
    
    trainingDataListT4 =  (239,[ 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list top center 'T' variant 1

    trainingDataListT5 =  (240,[ 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],19,'T',2,'F') # training data list top right 'T' variant 1
    
    trainingDataListT6 =  (241,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list bottom left 'T' variant 2
    
    trainingDataListT7 =  (242,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list bottom center 'T' variant 2

    trainingDataListT8 =  (243,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    ],19,'T',2,'F') # training data list bottom right 'T' variant 2   
    
    trainingDataListT9 =  (244,[ 
    1,1,1,1,1,1,1,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],19,'T',2,'F')  # training data list top left 'T' variant 2
    
    trainingDataListT10 =  (245,[  
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list top center 'T' variant 2

    trainingDataListT11 =  (246,[ 
    0,0,0,0,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],19,'T',2,'F') # training data list top right 'T' variant 2


########
#  U  #
########                        

    trainingDataListU0 =  (21,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    ],20,'U',4,'N')  # training data list bottom left 'U' variant 1
    
    trainingDataListU1 =  (247,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,
    ],20,'U',4,'N')  # training data list bottom center 'U' variant 1

    trainingDataListU2 =  (248,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,
    ],20,'U',4,'N') # training data list bottom right 'U' variant 1      
    
    trainingDataListU3 =  (249,[ 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N')  # training data list top left 'U' variant 1
    
    trainingDataListU4 =  (250,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N')  # training data list top center 'U' variant 1

    trainingDataListU5 =  (251,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N') # training data list top right 'U' variant 1     
    
    trainingDataListU6 =  (252,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    ],20,'U',4,'N')  # training data list bottom left 'U' variant 2
    
    trainingDataListU7 =  (253,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,
    ],20,'U',4,'N')  # training data list bottom center 'U' variant 2

    trainingDataListU8 =  (254,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,
    ],20,'U',4,'N') # training data list bottom right 'U' variant 2      
    
    trainingDataListU9 =  (255,[ 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N')  # training data list top left 'U' variant 2
    
    trainingDataListU10 =  (256,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N')  # training data list top center 'U' variant 2

    trainingDataListU11 =  (257,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N') # training data list top right 'U' variant 2 
    
########
#  V  #
########                        

    trainingDataListV0 =  (22,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list bottom left 'V' variant 1
    
    trainingDataListV1 =  (258,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list bottom center 'V' variant 1

    trainingDataListV2 =  (259,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    ],21,'V',3,'X') # training data list bottom right 'V' variant 1   
    
    trainingDataListV3 =  (260,[ 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list top left 'V' variant 1
    
    trainingDataListV4 =  (261,[
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list top center 'V' variant 1

    trainingDataListV5 =  (262,[
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],21,'V',3,'X') # training data list top right 'V' variant 1     
    
    trainingDataListV6 =  (263,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list bottom left 'V' variant 2
    
    trainingDataListV7 =  (264,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list bottom center 'V' variant 2

    trainingDataListV8 =  (265,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    ],21,'V',3,'X') # training data list bottom right 'V' variant 2   
    
    trainingDataListV9 =  (266,[  
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],21,'V',3,'X')  # training data list top left 'V' variant 2
    
    trainingDataListV10 =  (267,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list top center 'V' variant 2

    trainingDataListV11 =  (268,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],21,'V',3,'X') # training data list top right 'V' variant 2   
    
    
########
#  W  #
########                        

    trainingDataListW0 =  (23,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,1,0,1,0,0,1,0,0,
    1,0,1,0,0,0,1,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],22,'W',4,'N')  # training data list bottom left 'W' variant 1
    
    trainingDataListW1 =  (269,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,1,0,1,0,0,1,0,
    0,1,0,1,0,0,0,1,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],22,'W',4,'N')  # training data list bottom center 'W' variant 1

    trainingDataListW2 =  (270,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,1,0,1,0,0,1,
    0,0,1,0,1,0,0,0,1,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],22,'W',4,'N') # training data list bottom right 'W' variant 1      
    
    trainingDataListW3 =  (271,[ 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,1,0,1,0,0,1,0,0,
    1,0,1,0,0,0,1,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],22,'W',4,'N')  # training data list top left 'W' variant 1
    
    trainingDataListW4 =  (272,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,1,0,1,0,0,1,0,
    0,1,0,1,0,0,0,1,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],22,'W',4,'N')  # training data list top center 'W' variant 1

    trainingDataListW5 =  (273,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,1,0,1,0,0,1,
    0,0,1,0,1,0,0,0,1,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],22,'W',4,'N') # training data list top right 'W' variant 1  


    trainingDataListW6 =  (274,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,1,1,1,0,0,1,0,0,
    1,0,1,1,0,1,1,0,1,0,0,
    1,1,1,0,0,0,1,1,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    ],22,'W',4,'N')  # training data list bottom left 'W' variant 2
    
    trainingDataListW7 =  (275,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,1,1,1,0,0,1,0,
    0,1,0,1,1,0,1,1,0,1,0,
    0,1,1,1,0,0,0,1,1,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    ],22,'W',4,'N')  # training data list bottom center 'W' variant 2

    trainingDataListW8 =  (276,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,1,1,1,0,0,1,
    0,0,1,0,1,1,0,1,1,0,1,
    0,0,1,1,1,0,0,0,1,1,1,
    0,0,0,1,0,0,0,0,0,1,0,
    ],22,'W',4,'N') # training data list bottom right 'W' variant 2      
    
    trainingDataListW9 =  (277,[  
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,1,1,1,0,0,1,0,0,
    1,0,1,1,0,1,1,0,1,0,0,
    1,1,1,0,0,0,1,1,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],22,'W',4,'N')  # training data list top left 'W' variant 2
    
    trainingDataListW10 =  (278,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,1,0,1,0,0,1,0,
    0,1,0,1,0,0,0,1,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],22,'W',4,'N')  # training data list top center 'W' variant 2

    trainingDataListW11 =  (279,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,1,1,1,0,0,1,
    0,0,1,0,1,1,0,1,1,0,1,
    0,0,1,1,1,0,0,0,1,1,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],22,'W',4,'N') # training data list top right 'W' variant 2  

########
#  X  #
########                        

    trainingDataListX0 =  (24,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],23,'X',3,'X')  # training data list bottom left 'X' variant 1
    
    trainingDataListX1 =  (280,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],23,'X',3,'X')  # training data list bottom center 'X' variant 1

    trainingDataListX2 =  (281,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    ],23,'X',3,'X') # training data list bottom right 'X' variant 1  
    
    trainingDataListX3 =  (282,[
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],23,'X',3,'X')  # training data list top left 'X' variant 1
    
    trainingDataListX4 =  (283,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],23,'X',3,'X')  # training data list top center 'X' variant 1

    trainingDataListX5 =  (284,[
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],23,'X',3,'X') # training data list top right 'X' variant 1  
    
    trainingDataListX6 =  (285,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],23,'X',3,'X')  # training data list bottom left 'X' variant 2
    
    trainingDataListX7 =  (286,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],23,'X',3,'X')  # training data list bottom center 'X' variant 2

    trainingDataListX8 =  (287,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],23,'X',3,'X') # training data list bottom right 'X' variant 2 
    
    trainingDataListX9 =  (288,[
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],23,'X',3,'X')  # training data list top left 'X' variant 2
    
    trainingDataListX10 =  (289,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],23,'X',3,'X')  # training data list top center 'X' variant 2

    trainingDataListX11 =  (290,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],23,'X',3,'X') # training data list top right 'X' variant 2  
    
########
#  Y  #
########                        

    trainingDataListY0 =  (25,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    ],24,'Y',3,'X')   # training data list bottom left 'Y' variant 1
    
    trainingDataListY1 =  (291,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],24,'Y',3,'X')  # training data list bottom center 'Y' variant 1

    trainingDataListY2 =  (292,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    ],24,'Y',3,'X') # training data list bottom right 'Y' variant 1  
    
    trainingDataListY3 =  (293,[
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],24,'Y',3,'X')  # training data list top left 'Y' variant 1
    
    trainingDataListY4 =  (294,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],24,'Y',3,'X')  # training data list top center 'Y variant 1

    trainingDataListY5 =  (295,[
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],24,'Y',3,'X') # training data list top right 'Y' variant 1  
    
    trainingDataListY6 =  (296,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    ],24,'Y',3,'X')  # training data list bottom left 'Y' variant 2
    
    trainingDataListY7 =  (297,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],24,'Y',3,'X')  # training data list bottom center 'Y' variant 2

    trainingDataListY8 =  (298,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    ],24,'Y',3,'X') # training data list bottom right 'Y' variant 2 
    
    trainingDataListY9 =  (299,[
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],24,'Y',3,'X')  # training data list top left 'Y' variant 2
    
    trainingDataListY10 =  (300,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],24,'Y',3,'X')  # training data list top center 'Y' variant 2

    trainingDataListY11 =  (301,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],24,'Y',3,'X') # training data list top right 'X' variant 2
  
########
#  Z  #
########                        

    trainingDataListZ0 =  (26,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    ],25,'Z',0,'L')    # training data list bottom left 'Z' variant 1
    
    trainingDataListZ1 =  (302,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    ],25,'Z',0,'L')   # training data list bottom center 'Z' variant 1

    trainingDataListZ2 =  (303,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    ],25,'Z',0,'L')  # training data list bottom right 'Z' variant 1  
    
    trainingDataListZ3 =  (304,[ 
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],25,'Z',0,'L')    # training data list top left 'Z' variant 1
    
    trainingDataListZ4 =  (305,[
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0
    ],25,'Z',0,'L')   # training data list top center 'Z' variant 1

    trainingDataListZ5 =  (306,[
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],25,'Z',0,'L')  # training data list top right 'Z' variant 1  
    
    trainingDataListZ6 =  (307,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    ],25,'Z',0,'L')    # training data list bottom left 'Z' variant 2
    
    trainingDataListZ7 =  (308,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    ],25,'Z',0,'L')   # training data list bottom center 'Z' variant 2

    trainingDataListZ8 =  (309,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,1,1,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    ],25,'Z',0,'L')  # training data list bottom right 'Z' variant 2  
    
    trainingDataListZ9 =  (310,[ 
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],25,'Z',0,'L')    # training data list top left 'Z' variant 2
    
    trainingDataListZ10 =  (311,[
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0
    ],25,'Z',0,'L')   # training data list top center 'Z' variant 2

    trainingDataListZ11 =  (312,[
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,1,1,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],25,'Z',0,'L')  # training data list top right 'Z' variant 2 

       
    if dataSet == 1: trainingDataList = trainingDataListA0
    if dataSet == 2: trainingDataList = trainingDataListA1    
    if dataSet == 3: trainingDataList = trainingDataListA2
    if dataSet == 4: trainingDataList = trainingDataListA3
    if dataSet == 5: trainingDataList = trainingDataListA4        
    if dataSet == 6: trainingDataList = trainingDataListA5
    if dataSet == 7: trainingDataList = trainingDataListA6
    if dataSet == 8: trainingDataList = trainingDataListA7   
    if dataSet == 9: trainingDataList = trainingDataListA8 
    if dataSet == 10: trainingDataList = trainingDataListA9
    if dataSet == 11: trainingDataList = trainingDataListA10  
    if dataSet == 12: trainingDataList = trainingDataListA11 
                                                                                                 
    if dataSet == 13: trainingDataList = trainingDataListB0
    if dataSet == 14: trainingDataList = trainingDataListB1    
    if dataSet == 15: trainingDataList = trainingDataListB2
    if dataSet == 16: trainingDataList = trainingDataListB3
    if dataSet == 17: trainingDataList = trainingDataListB4        
    if dataSet == 18: trainingDataList = trainingDataListB5
    if dataSet == 19: trainingDataList = trainingDataListB6
    if dataSet == 20: trainingDataList = trainingDataListB7   
    if dataSet == 21: trainingDataList = trainingDataListB8 
    if dataSet == 22: trainingDataList = trainingDataListB9
    if dataSet == 23: trainingDataList = trainingDataListB10  
    if dataSet == 24: trainingDataList = trainingDataListB11 
    
    if dataSet == 25: trainingDataList = trainingDataListC0
    if dataSet == 26: trainingDataList = trainingDataListC1    
    if dataSet == 27: trainingDataList = trainingDataListC2
    if dataSet == 28: trainingDataList = trainingDataListC3
    if dataSet == 29: trainingDataList = trainingDataListC4        
    if dataSet == 30: trainingDataList = trainingDataListC5
    if dataSet == 31: trainingDataList = trainingDataListC6
    if dataSet == 32: trainingDataList = trainingDataListC7   
    if dataSet == 33: trainingDataList = trainingDataListC8 
    if dataSet == 34: trainingDataList = trainingDataListC9
    if dataSet == 35: trainingDataList = trainingDataListC10  
    if dataSet == 36: trainingDataList = trainingDataListC11 
    
    if dataSet == 37: trainingDataList = trainingDataListD0
    if dataSet == 38: trainingDataList = trainingDataListD1    
    if dataSet == 39: trainingDataList = trainingDataListD2
    if dataSet == 40: trainingDataList = trainingDataListD3
    if dataSet == 41: trainingDataList = trainingDataListD4        
    if dataSet == 42: trainingDataList = trainingDataListD5
    if dataSet == 43: trainingDataList = trainingDataListD6
    if dataSet == 44: trainingDataList = trainingDataListD7   
    if dataSet == 45: trainingDataList = trainingDataListD8 
    if dataSet == 46: trainingDataList = trainingDataListD9
    if dataSet == 47: trainingDataList = trainingDataListD10  
    if dataSet == 48: trainingDataList = trainingDataListD11 
    
    if dataSet == 49: trainingDataList = trainingDataListE0
    if dataSet == 50: trainingDataList = trainingDataListE1    
    if dataSet == 51: trainingDataList = trainingDataListE2
    if dataSet == 52: trainingDataList = trainingDataListE3
    if dataSet == 53: trainingDataList = trainingDataListE4        
    if dataSet == 54: trainingDataList = trainingDataListE5
    if dataSet == 55: trainingDataList = trainingDataListE6
    if dataSet == 56: trainingDataList = trainingDataListE7   
    if dataSet == 57: trainingDataList = trainingDataListE8 
    if dataSet == 58: trainingDataList = trainingDataListE9
    if dataSet == 59: trainingDataList = trainingDataListE10  
    if dataSet == 60: trainingDataList = trainingDataListE11 
    
    if dataSet == 61: trainingDataList = trainingDataListF0
    if dataSet == 62: trainingDataList = trainingDataListF1    
    if dataSet == 63: trainingDataList = trainingDataListF2
    if dataSet == 64: trainingDataList = trainingDataListF3
    if dataSet == 65: trainingDataList = trainingDataListF4        
    if dataSet == 66: trainingDataList = trainingDataListF5
    if dataSet == 67: trainingDataList = trainingDataListF6
    if dataSet == 68: trainingDataList = trainingDataListF7   
    if dataSet == 69: trainingDataList = trainingDataListF8 
    if dataSet == 70: trainingDataList = trainingDataListF9
    if dataSet == 71: trainingDataList = trainingDataListF10  
    if dataSet == 72: trainingDataList = trainingDataListF11 
    
    if dataSet == 73: trainingDataList = trainingDataListG0
    if dataSet == 74: trainingDataList = trainingDataListG1    
    if dataSet == 75: trainingDataList = trainingDataListG2
    if dataSet == 76: trainingDataList = trainingDataListG3
    if dataSet == 77: trainingDataList = trainingDataListG4        
    if dataSet == 78: trainingDataList = trainingDataListG5
    if dataSet == 79: trainingDataList = trainingDataListG6
    if dataSet == 80: trainingDataList = trainingDataListG7   
    if dataSet == 81: trainingDataList = trainingDataListG8 
    if dataSet == 82: trainingDataList = trainingDataListG9
    if dataSet == 83: trainingDataList = trainingDataListG10  
    if dataSet == 84: trainingDataList = trainingDataListG11     
    
    if dataSet == 85: trainingDataList = trainingDataListH0
    if dataSet == 86: trainingDataList = trainingDataListH1    
    if dataSet == 87: trainingDataList = trainingDataListH2
    if dataSet == 88: trainingDataList = trainingDataListH3
    if dataSet == 89: trainingDataList = trainingDataListH4        
    if dataSet == 90: trainingDataList = trainingDataListH5
    if dataSet == 91: trainingDataList = trainingDataListH6
    if dataSet == 92: trainingDataList = trainingDataListH7   
    if dataSet == 93: trainingDataList = trainingDataListH8 
    if dataSet == 94: trainingDataList = trainingDataListH9
    if dataSet == 95: trainingDataList = trainingDataListH10  
    if dataSet == 96: trainingDataList = trainingDataListH11                                                                                                                                                                                                                
    
    if dataSet == 97: trainingDataList = trainingDataListI0
    if dataSet == 98: trainingDataList = trainingDataListI1    
    if dataSet == 99: trainingDataList = trainingDataListI2
    if dataSet == 100: trainingDataList = trainingDataListI3
    if dataSet == 101: trainingDataList = trainingDataListI4        
    if dataSet == 102: trainingDataList = trainingDataListI5
    if dataSet == 103: trainingDataList = trainingDataListI6
    if dataSet == 104: trainingDataList = trainingDataListI7   
    if dataSet == 105: trainingDataList = trainingDataListI8 
    if dataSet == 106: trainingDataList = trainingDataListI9
    if dataSet == 107: trainingDataList = trainingDataListI10  
    if dataSet == 108: trainingDataList = trainingDataListI11       
    
    if dataSet == 109: trainingDataList = trainingDataListJ0
    if dataSet == 110: trainingDataList = trainingDataListJ1    
    if dataSet == 111: trainingDataList = trainingDataListJ2
    if dataSet == 112: trainingDataList = trainingDataListJ3
    if dataSet == 113: trainingDataList = trainingDataListJ4        
    if dataSet == 114: trainingDataList = trainingDataListJ5
    if dataSet == 115: trainingDataList = trainingDataListJ6
    if dataSet == 116: trainingDataList = trainingDataListJ7   
    if dataSet == 117: trainingDataList = trainingDataListJ8 
    if dataSet == 118: trainingDataList = trainingDataListJ9
    if dataSet == 119: trainingDataList = trainingDataListJ10  
    if dataSet == 120: trainingDataList = trainingDataListJ11   
    
    if dataSet == 121: trainingDataList = trainingDataListK0
    if dataSet == 122: trainingDataList = trainingDataListK1    
    if dataSet == 123: trainingDataList = trainingDataListK2
    if dataSet == 124: trainingDataList = trainingDataListK3
    if dataSet == 125: trainingDataList = trainingDataListK4        
    if dataSet == 126: trainingDataList = trainingDataListK5
    if dataSet == 127: trainingDataList = trainingDataListK6
    if dataSet == 128: trainingDataList = trainingDataListK7   
    if dataSet == 129: trainingDataList = trainingDataListK8 
    if dataSet == 130: trainingDataList = trainingDataListK9
    if dataSet == 131: trainingDataList = trainingDataListK10  
    if dataSet == 132: trainingDataList = trainingDataListK11     
    
    if dataSet == 133: trainingDataList = trainingDataListL0
    if dataSet == 134: trainingDataList = trainingDataListL1    
    if dataSet == 135: trainingDataList = trainingDataListL2
    if dataSet == 136: trainingDataList = trainingDataListL3
    if dataSet == 137: trainingDataList = trainingDataListL4        
    if dataSet == 138: trainingDataList = trainingDataListL5
    if dataSet == 139: trainingDataList = trainingDataListL6
    if dataSet == 140: trainingDataList = trainingDataListL7   
    if dataSet == 141: trainingDataList = trainingDataListL8 
    if dataSet == 142: trainingDataList = trainingDataListL9
    if dataSet == 143: trainingDataList = trainingDataListL10  
    if dataSet == 144: trainingDataList = trainingDataListL11     
    
    if dataSet == 145: trainingDataList = trainingDataListM0
    if dataSet == 146: trainingDataList = trainingDataListM1    
    if dataSet == 147: trainingDataList = trainingDataListM2
    if dataSet == 148: trainingDataList = trainingDataListM3
    if dataSet == 149: trainingDataList = trainingDataListM4        
    if dataSet == 150: trainingDataList = trainingDataListM5
    if dataSet == 151: trainingDataList = trainingDataListM6
    if dataSet == 152: trainingDataList = trainingDataListM7   
    if dataSet == 153: trainingDataList = trainingDataListM8 
    if dataSet == 154: trainingDataList = trainingDataListM9
    if dataSet == 155: trainingDataList = trainingDataListM10  
    if dataSet == 156: trainingDataList = trainingDataListM11    
    
    if dataSet == 157: trainingDataList = trainingDataListN0
    if dataSet == 158: trainingDataList = trainingDataListN1    
    if dataSet == 159: trainingDataList = trainingDataListN2
    if dataSet == 160: trainingDataList = trainingDataListN3
    if dataSet == 161: trainingDataList = trainingDataListN4        
    if dataSet == 162: trainingDataList = trainingDataListN5
    if dataSet == 163: trainingDataList = trainingDataListN6
    if dataSet == 164: trainingDataList = trainingDataListN7   
    if dataSet == 165: trainingDataList = trainingDataListN8 
    if dataSet == 166: trainingDataList = trainingDataListN9
    if dataSet == 167: trainingDataList = trainingDataListN10  
    if dataSet == 168: trainingDataList = trainingDataListN11     
    
    if dataSet == 169: trainingDataList = trainingDataListO0
    if dataSet == 170: trainingDataList = trainingDataListO1    
    if dataSet == 171: trainingDataList = trainingDataListO2
    if dataSet == 172: trainingDataList = trainingDataListO3
    if dataSet == 173: trainingDataList = trainingDataListO4        
    if dataSet == 174: trainingDataList = trainingDataListO5
    if dataSet == 175: trainingDataList = trainingDataListO6
    if dataSet == 176: trainingDataList = trainingDataListO7   
    if dataSet == 177: trainingDataList = trainingDataListO8 
    if dataSet == 178: trainingDataList = trainingDataListO9
    if dataSet == 179: trainingDataList = trainingDataListO10  
    if dataSet == 180: trainingDataList = trainingDataListO11    
    
    if dataSet == 181: trainingDataList = trainingDataListP0
    if dataSet == 182: trainingDataList = trainingDataListP1    
    if dataSet == 183: trainingDataList = trainingDataListP2
    if dataSet == 184: trainingDataList = trainingDataListP3
    if dataSet == 185: trainingDataList = trainingDataListP4        
    if dataSet == 186: trainingDataList = trainingDataListP5
    if dataSet == 187: trainingDataList = trainingDataListP6
    if dataSet == 188: trainingDataList = trainingDataListP7   
    if dataSet == 189: trainingDataList = trainingDataListP8 
    if dataSet == 190: trainingDataList = trainingDataListP9
    if dataSet == 191: trainingDataList = trainingDataListP10  
    if dataSet == 192: trainingDataList = trainingDataListP11    
    
    if dataSet == 193: trainingDataList = trainingDataListQ0
    if dataSet == 194: trainingDataList = trainingDataListQ1    
    if dataSet == 195: trainingDataList = trainingDataListQ2
    if dataSet == 196: trainingDataList = trainingDataListQ3
    if dataSet == 197: trainingDataList = trainingDataListQ4        
    if dataSet == 198: trainingDataList = trainingDataListQ5
    if dataSet == 199: trainingDataList = trainingDataListQ6
    if dataSet == 200: trainingDataList = trainingDataListQ7   
    if dataSet == 201: trainingDataList = trainingDataListQ8 
    if dataSet == 202: trainingDataList = trainingDataListQ9
    if dataSet == 203: trainingDataList = trainingDataListQ10  
    if dataSet == 204: trainingDataList = trainingDataListQ11  
    
    if dataSet == 205: trainingDataList = trainingDataListR0
    if dataSet == 206: trainingDataList = trainingDataListR1    
    if dataSet == 207: trainingDataList = trainingDataListR2
    if dataSet == 208: trainingDataList = trainingDataListR3
    if dataSet == 209: trainingDataList = trainingDataListR4        
    if dataSet == 210: trainingDataList = trainingDataListR5
    if dataSet == 211: trainingDataList = trainingDataListR6
    if dataSet == 212: trainingDataList = trainingDataListR7   
    if dataSet == 213: trainingDataList = trainingDataListR8 
    if dataSet == 214: trainingDataList = trainingDataListR9
    if dataSet == 215: trainingDataList = trainingDataListR10  
    if dataSet == 216: trainingDataList = trainingDataListR11 
    
    if dataSet == 217: trainingDataList = trainingDataListS0
    if dataSet == 218: trainingDataList = trainingDataListS1    
    if dataSet == 219: trainingDataList = trainingDataListS2
    if dataSet == 220: trainingDataList = trainingDataListS3
    if dataSet == 221: trainingDataList = trainingDataListS4        
    if dataSet == 222: trainingDataList = trainingDataListS5
    if dataSet == 223: trainingDataList = trainingDataListS6
    if dataSet == 224: trainingDataList = trainingDataListS7   
    if dataSet == 225: trainingDataList = trainingDataListS8 
    if dataSet == 226: trainingDataList = trainingDataListS9
    if dataSet == 227: trainingDataList = trainingDataListS10  
    if dataSet == 228: trainingDataList = trainingDataListS11     
    
    if dataSet == 229: trainingDataList = trainingDataListT0
    if dataSet == 230: trainingDataList = trainingDataListT1    
    if dataSet == 231: trainingDataList = trainingDataListT2
    if dataSet == 232: trainingDataList = trainingDataListT3
    if dataSet == 233: trainingDataList = trainingDataListT4        
    if dataSet == 234: trainingDataList = trainingDataListT5
    if dataSet == 235: trainingDataList = trainingDataListT6
    if dataSet == 236: trainingDataList = trainingDataListT7   
    if dataSet == 237: trainingDataList = trainingDataListT8 
    if dataSet == 238: trainingDataList = trainingDataListT9
    if dataSet == 239: trainingDataList = trainingDataListT10  
    if dataSet == 240: trainingDataList = trainingDataListT11        
    
    if dataSet == 241: trainingDataList = trainingDataListU0
    if dataSet == 242: trainingDataList = trainingDataListU1    
    if dataSet == 243: trainingDataList = trainingDataListU2
    if dataSet == 244: trainingDataList = trainingDataListU3
    if dataSet == 245: trainingDataList = trainingDataListU4        
    if dataSet == 246: trainingDataList = trainingDataListU5
    if dataSet == 247: trainingDataList = trainingDataListU6
    if dataSet == 248: trainingDataList = trainingDataListU7   
    if dataSet == 249: trainingDataList = trainingDataListU8 
    if dataSet == 250: trainingDataList = trainingDataListU9
    if dataSet == 251: trainingDataList = trainingDataListU10  
    if dataSet == 252: trainingDataList = trainingDataListU11            
    
    if dataSet == 253: trainingDataList = trainingDataListV0
    if dataSet == 254: trainingDataList = trainingDataListV1    
    if dataSet == 255: trainingDataList = trainingDataListV2
    if dataSet == 256: trainingDataList = trainingDataListV3
    if dataSet == 257: trainingDataList = trainingDataListV4        
    if dataSet == 258: trainingDataList = trainingDataListV5
    if dataSet == 259: trainingDataList = trainingDataListV6
    if dataSet == 260: trainingDataList = trainingDataListV7   
    if dataSet == 261: trainingDataList = trainingDataListV8 
    if dataSet == 262: trainingDataList = trainingDataListV9
    if dataSet == 263: trainingDataList = trainingDataListV10  
    if dataSet == 264: trainingDataList = trainingDataListV11                 
    
    if dataSet == 265: trainingDataList = trainingDataListW0
    if dataSet == 266: trainingDataList = trainingDataListW1    
    if dataSet == 267: trainingDataList = trainingDataListW2
    if dataSet == 268: trainingDataList = trainingDataListW3
    if dataSet == 269: trainingDataList = trainingDataListW4        
    if dataSet == 270: trainingDataList = trainingDataListW5
    if dataSet == 271: trainingDataList = trainingDataListW6
    if dataSet == 272: trainingDataList = trainingDataListW7   
    if dataSet == 273: trainingDataList = trainingDataListW8 
    if dataSet == 274: trainingDataList = trainingDataListW9
    if dataSet == 275: trainingDataList = trainingDataListW10  
    if dataSet == 276: trainingDataList = trainingDataListW11 
    
    if dataSet == 277: trainingDataList = trainingDataListX0
    if dataSet == 278: trainingDataList = trainingDataListX1    
    if dataSet == 279: trainingDataList = trainingDataListX2
    if dataSet == 280: trainingDataList = trainingDataListX3
    if dataSet == 281: trainingDataList = trainingDataListX4        
    if dataSet == 282: trainingDataList = trainingDataListX5
    if dataSet == 283: trainingDataList = trainingDataListX6
    if dataSet == 284: trainingDataList = trainingDataListX7   
    if dataSet == 285: trainingDataList = trainingDataListX8 
    if dataSet == 286: trainingDataList = trainingDataListX9
    if dataSet == 287: trainingDataList = trainingDataListX10  
    if dataSet == 288: trainingDataList = trainingDataListX11 
    
    if dataSet == 289: trainingDataList = trainingDataListY0
    if dataSet == 290: trainingDataList = trainingDataListY1    
    if dataSet == 291: trainingDataList = trainingDataListY2
    if dataSet == 292: trainingDataList = trainingDataListY3
    if dataSet == 293: trainingDataList = trainingDataListY4        
    if dataSet == 294: trainingDataList = trainingDataListY5
    if dataSet == 295: trainingDataList = trainingDataListY6
    if dataSet == 296: trainingDataList = trainingDataListY7   
    if dataSet == 297: trainingDataList = trainingDataListY8 
    if dataSet == 298: trainingDataList = trainingDataListY9
    if dataSet == 299: trainingDataList = trainingDataListY10  
    if dataSet == 300: trainingDataList = trainingDataListY11 
    
    if dataSet == 301: trainingDataList = trainingDataListZ0
    if dataSet == 302: trainingDataList = trainingDataListZ1    
    if dataSet == 303: trainingDataList = trainingDataListZ2
    if dataSet == 304: trainingDataList = trainingDataListZ3
    if dataSet == 305: trainingDataList = trainingDataListZ4        
    if dataSet == 306: trainingDataList = trainingDataListZ5
    if dataSet == 307: trainingDataList = trainingDataListZ6
    if dataSet == 308: trainingDataList = trainingDataListZ7   
    if dataSet == 309: trainingDataList = trainingDataListZ8 
    if dataSet == 310: trainingDataList = trainingDataListZ9
    if dataSet == 311: trainingDataList = trainingDataListZ10  
    if dataSet == 312: trainingDataList = trainingDataListZ11                     
                        
                            
    return (trainingDataList)      

   
####################################################################################################
####################################################################################################
#
# Function to initialize a specific connection weight with a randomly-generated number between 0 & 1
#
####################################################################################################
####################################################################################################

def obtainRandomAlphabetTrainingValues (numTrainingDataSets):

   
    # The training data list will have the  values for the X-OR problem:
    #   - First 81 valuea will be the 9x9 pixel-grid representation of the letter
    #       represented as a 1-D array (0 or 1 for each)
    #   - 82nd value will be the output class (0 .. totalClasses - 1)
    #   - 83rd value will be the string associated with that class, e.g., 'X'
    # We are starting with five letters in the training set: X, M, N, H, and A
    # Thus there are five choices for training data, which we'll select on random basis
      
    dataSet = random.randint(0, numTrainingDataSets)

########
#  A   #
########

    trainingDataListA0 =  (1,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,0,0,0,0,0,0, 
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],0,'A',2,'F') # training data list bottom left 'A' variant 1
    
    trainingDataListA1 =  (27,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,1,0,0,0,0,0, 
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],0,'A',2,'F') # training data list bottom center 'A' variant 1

    trainingDataListA2 =  (28,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,1,0,0,0,0, 
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],0,'A',2,'F') # training data list bottom right 'A' variant 1  
    

    trainingDataListA3 =  (29,[
    0,0,0,0,1,0,0,0,0,0,0, 
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,
    ],0,'A',2,'F') # training data list top left 'A' variant 1
    
    trainingDataListA4 =  (30,[
    0,0,0,0,0,1,0,0,0,0,0, 
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],0,'A',2,'F') # training data list top center 'A' variant 1

    trainingDataListA5 =  (31,[
    0,0,0,0,0,0,1,0,0,0,0, 
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],0,'A',2,'F') # training data list top right 'A' variant 1    
    
           
    trainingDataListA6 =  (32,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,0,0,0,0,0,0, 
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],0,'A',2,'F') # training data list bottom left 'A' variant 2
    
    trainingDataListA7 =  (33,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,1,0,0,0,0,0, 
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,    
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],0,'A',2,'F') # training data list bottom center 'A' variant 2

    trainingDataListA8 =  (34,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,1,0,0,0,0, 
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,    
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],0,'A',2,'F') # training data list bottom right 'A' variant 2 
    

    trainingDataListA9 =  (35,[
    0,0,0,0,1,0,0,0,0,0,0, 
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,   
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,
    ],0,'A',2,'F') # training data list top left 'A' variant 2
    
    trainingDataListA10 =  (36,[
    0,0,0,0,0,1,0,0,0,0,0, 
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,    
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],0,'A',2,'F') # training data list top center 'A' variant 2

    trainingDataListA11 =  (37,[
    0,0,0,0,0,0,1,0,0,0,0, 
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,    
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],0,'A',2,'F') # training data list top right 'A' variant 2          
              

########
#  B   #
########                        

    trainingDataListB0 =  (2,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0, 
    ],1,'B',0,'L') # training data list bottom left 'B' variant 1
    
    trainingDataListB1 =  (38,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0, 
    ],1,'B',0,'L') # training data list bottom center 'B' variant 1

    trainingDataListB2 =  (39,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0, 
    ],1,'B',0,'L') # training data list bottom right 'B' variant 1  
            
    trainingDataListB3 =  (40,[
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],1,'B',0,'L') # training data list top left 'B' variant 1
    
    trainingDataListB4 =  (41,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],1,'B',0,'L') # training data list top center 'B' variant 1

    trainingDataListB5 =  (42,[
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],1,'B',0,'L') # training data list top right 'B' variant 1     
    
    trainingDataListB6 =  (43,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,1,1,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0, 
    ],1,'B',0,'L') # training data list bottom left 'B' variant 2
    
    trainingDataListB7 =  (44,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,1,1,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0, 
    ],1,'B',0,'L') # training data list bottom center 'B' variant 2

    trainingDataListB8 =  (45,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,1,1,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0, 
    ],1,'B',0,'L') # training data list bottom right 'B' variant 2    
    
    trainingDataListB9 =  (46,[
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,1,1,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],1,'B',0,'L') # training data list top left 'B' variant 2
    
    trainingDataListB10 =  (47,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,1,1,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],1,'B',0,'L') # training data list top center 'B' variant 2

    trainingDataListB11 =  (48,[
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,1,1,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],1,'B',0,'L') # training data list top right 'B' variant 2   
    
    

########
#  C   #
########                        

    trainingDataListC0 =  (3,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],2,'C',1,'O')  # training data list bottom left 'C' variant 1
    
    trainingDataListC1 =  (49,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],2,'C',1,'O')  # training data list bottom center 'C' variant 1

    trainingDataListC2 =  (50,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],2,'C',1,'O')  # training data list bottom right 'C' variant 1  
            
    trainingDataListC3 =  (51,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],2,'C',1,'O')  # training data list top left 'C' variant 1
    
    trainingDataListC4 =  (52,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],2,'C',1,'O')  # training data list top center 'C' variant 1

    trainingDataListC5 =  (53,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],2,'C',1,'O')  # training data list top right 'C' variant 1  
    
    trainingDataListC6 =  (54,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],2,'C',1,'O')  # training data list bottom left 'C' variant 2
    
    trainingDataListC7 =  (55,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],2,'C',1,'O')  # training data list bottom center 'C' variant 2

    trainingDataListC8 =  (56,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],2,'C',1,'O')  # training data list bottom right 'C' variant 2  
            
    trainingDataListC9 =  (57,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],2,'C',1,'O')  # training data list top left 'C' variant 2
    
    trainingDataListC10 =  (58,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],2,'C',1,'O')  # training data list top center 'C' variant 2

    trainingDataListC11 =  (59,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],2,'C',1,'O')  # training data list top right 'C' variant 2 
    
    
########
#  D   #
########                        

    trainingDataListD0 =  (4,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0, 
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0, 
    ],3,'D',1,'O')  # training data list bottom left 'D' variant 1
    
    trainingDataListD1 =  (60,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],3,'D',1,'O')  # training data list bottom center 'D' variant 1

    trainingDataListD2 =  (61,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],3,'D',1,'O')  # training data list bottom right 'D' variant 1      
    
    trainingDataListD3 =  (62,[
    1,1,1,1,1,1,1,0,0,0,0, 
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],3,'D',1,'O')  # training data list top left 'D' variant 1
    
    trainingDataListD4 =  (63,[ 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],3,'D',1,'O')  # training data list top center 'D' variant 1

    trainingDataListD5 =  (64,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],3,'D',1,'O')  # training data list top right 'D' variant 1                     
    
    trainingDataListD6 =  (65,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0, 
    1,0,0,0,0,0,1,1,0,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,1,1,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0, 
    ],3,'D',1,'O')  # training data list bottom left 'D' variant 2
    
    trainingDataListD7 =  (66,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],3,'D',1,'O')  # training data list bottom center 'D' variant 2

    trainingDataListD8 =  (67,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,1,0,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],3,'D',1,'O')  # training data list bottom right 'D' variant 2     
    
    trainingDataListD9 =  (68,[
    1,1,1,1,1,1,1,0,0,0,0, 
    1,0,0,0,0,0,1,1,0,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,1,1,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],3,'D',1,'O')  # training data list top left 'D' variant 2
    
    trainingDataListD10 =  (69,[ 
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],3,'D',1,'O')  # training data list top center 'D' variant 2

    trainingDataListD11 =  (70,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,1,0,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],3,'D',1,'O')  # training data list top right 'D' variant 2                     


########
#  E   #
########                        

    trainingDataListE0 =  (5,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0, 
    ],4,'E',0,'L')  # training data list bottom left 'E' variant 1
    
    trainingDataListE1 =  (71,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0, 
    ],4,'E',0,'L')  # training data list bottom center 'E' variant 1

    trainingDataListE2 =  (72,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1, 
    ],4,'E',0,'L')  # training data list bottom right 'E' variant 1 
    
    trainingDataListE3 =  (73,[ 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],4,'E',0,'L')  # training data list top left 'E' variant 1
    
    trainingDataListE4 =  (74,[
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],4,'E',0,'L')  # training data list top center 'E' variant 1

    trainingDataListE5 =  (75,[ 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],4,'E',0,'L')  # training data list top right 'E' variant 1              
                      
    trainingDataListE6 =  (76,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0, 
    ],4,'E',0,'L')  # training data list bottom left 'E' variant 2
    
    trainingDataListE7 =  (77,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0, 
    ],4,'E',0,'L')  # training data list bottom center 'E' variant 2

    trainingDataListE8 =  (78,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1, 
    ],4,'E',0,'L')  # training data list bottom right 'E' variant 2 
    
    trainingDataListE9 =  (79,[ 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],4,'E',0,'L')  # training data list top left 'E' variant 2
    
    trainingDataListE10 =  (80,[
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],4,'E',0,'L')  # training data list top center 'E' variant 2

    trainingDataListE11 =  (81,[ 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],4,'E',0,'L')  # training data list top right 'E' variant 2                                             
                                        
########
#  F   #
########                        

    trainingDataListF0 =  (6,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list bottom left 'F' variant 1
    
    trainingDataListF1 =  (82,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list bottom center 'F' variant 1

    trainingDataListF2 =  (83,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F') # training data list bottom right 'F' variant 1 
    
    trainingDataListF3 =  (84,[ 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],5,'F',2,'F')  # training data list top left 'F' variant 1
    
    trainingDataListF4 =  (85,[
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list top center 'F' variant 1

    trainingDataListF5 =  (86,[ 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],5,'F',2,'F')  # training data list top right 'F' variant 1              
                      
    trainingDataListF6 =  (87,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list bottom left 'F' variant 2
    
    trainingDataListF7 =  (88,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list bottom center 'F' variant 2

    trainingDataListF8 =  (89,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F')  # training data list bottom right 'F' variant 2 
    
    trainingDataListF9 =  (90,[ 
    1,1,1,1,1,1,1,1,1,0,0, 
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],5,'F',2,'F')  # training data list top left 'F' variant 2
    
    trainingDataListF10 =  (91,[
    0,1,1,1,1,1,1,1,1,1,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],5,'F',2,'F') # training data list top center 'F' variant 2

    trainingDataListF11 =  (92,[ 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],5,'F',2,'F')  # training data list top right 'F' variant 2                                                     


########
#  G   #
########                        

    trainingDataListG0 =  (7,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],6,'G',1,'O')  # training data list bottom left 'G' variant 1
    
    trainingDataListG1 =  (93,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],6,'G',1,'O')  # training data list bottom center 'G' variant 1

    trainingDataListG2 =  (94,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],6,'G',1,'O')  # training data list bottom right 'G' variant 1  
            
    trainingDataListG3 =  (95,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],6,'G',1,'O')  # training data list top left 'G' variant 1
    
    trainingDataListG4 =  (96,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],6,'G',1,'O')  # training data list top center 'G' variant 1

    trainingDataListG5 =  (97,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],6,'G',1,'O')  # training data list top right 'G' variant 1  
    
    trainingDataListG6 =  (98,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],6,'G',1,'O')  # training data list bottom left 'G' variant 2
    
    trainingDataListG7 =  (99,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],6,'G',1,'O')  # training data list bottom center 'G' variant 2

    trainingDataListG8 =  (100,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],6,'G',1,'O')  # training data list bottom right 'G' variant 2  
            
    trainingDataListG9 =  (101,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],6,'G',1,'O')  # training data list top left 'G' variant 2
    
    trainingDataListG10 =  (102,[
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],6,'G',1,'O')  # training data list top center 'G' variant 2

    trainingDataListG11 =  (103,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],6,'G',1,'O')  # training data list top right 'C' variant 2 
    
########
#  H   #
########     

    trainingDataListH0 =  (8,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],7,'H',4,'N') # training data list bottom left 'H' variant 1
    
    trainingDataListH1 =  (104,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],7,'H',4,'N') # training data list bottom center 'H' variant 1

    trainingDataListH2 =  (105,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],7,'H',4,'N') # training data list bottom right 'H' variant 1  

    trainingDataListH3 =  (106,[
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],7,'H',4,'N') # training data list top left 'H' variant 1
    
    trainingDataListH4 =  (107,[
    0,1,0,0,0,0,0,0,0,1,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],7,'H',4,'N') # training data list top center 'H' variant 1

    trainingDataListH5 =  (108,[ 
    0,0,1,0,0,0,0,0,0,0,1, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],7,'H',4,'N') # training data list top right 'H' variant 1     
    
    trainingDataListH6 =  (109,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    ],7,'H',4,'N') # training data list bottom left 'H' variant 2
    
    trainingDataListH7 =  (110,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    ],7,'H',4,'N') # training data list bottom center 'H' variant 2

    trainingDataListH8 =  (111,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,1,1,1,1,1,1,
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    ],7,'H',4,'N') # training data list bottom right 'H' variant 2  

    trainingDataListH9 =  (112,[
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],7,'H',4,'N') # training data list top left 'H' variant 2
    
    trainingDataListH10 =  (113,[
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,1,0,0,0,0,0,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],7,'H',4,'N') # training data list top center 'H' variant 2

    trainingDataListH11 =  (114,[
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,1,1,1,1,1,1,
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,1,0,0,0,0,0,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],7,'H',4,'N') # training data list top right 'H' variant 2   
        
                
########
#  I   #
########     

    trainingDataListI0 =  (9,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    1,1,1,1,1,0,0,0,0,0,0,
    ],8,'I',2,'F') # training data list bottom left 'I' variant 1
    
    trainingDataListI1 =  (115,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,1,1,1,1,1,0,0,0,
    ],8,'I',2,'F') # training data list bottom center 'I' variant 1

    trainingDataListI2 =  (116,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,1,1,1,1,1, 
    ],8,'I',2,'F') # training data list bottom right 'I' variant 1  

    trainingDataListI3 =  (117,[ 
    1,1,1,1,1,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    1,1,1,1,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],8,'I',2,'F') # training data list top left 'I' variant 1
    
    trainingDataListI4 =  (118,[
    0,0,0,1,1,1,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,1,1,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],8,'I',2,'F') # training data list top center 'I' variant 1

    trainingDataListI5 =  (119,[
    0,0,0,0,0,0,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],8,'I',2,'F') # training data list bottom right 'I' variant 1  
    
    trainingDataListI6 =  (120,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    ],8,'I',2,'F') # training data list bottom left 'I' variant 2
    
    trainingDataListI7 =  (121,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    ],8,'I',2,'F') # training data list bottom center 'I' variant 2

    trainingDataListI8 =  (122,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,1,1,1,1,1,1,1, 
    ],8,'I',2,'F') # training data list bottom right 'I' variant 2 

    trainingDataListI9 =  (123,[
    1,1,1,1,1,1,1,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],8,'I',2,'F') # training data list top left 'I' variant 2
    
    trainingDataListI10 =  (124,[ 
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],8,'I',2,'F') # training data list top center 'I' variant 2

    trainingDataListI11 =  (125,[ 
    0,0,0,0,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],8,'I',2,'F') # training data list top right 'I' variant 2 
    
########
#  J   #
########     

    trainingDataListJ0 =  (10,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,1,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    ],9,'J',1,'O') # training data list bottom left 'J' variant 1
    
    trainingDataListJ1 =  (126,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    ],9,'J',1,'O') # training data list bottom center 'J' variant 1

    trainingDataListJ2 =  (127,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,0,1,1,1,0,0,
    ],9,'J',1,'O') # training data list bottom right 'J' variant 1  
    
    trainingDataListJ3 =  (128,[ 
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,1,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],9,'J',1,'O') # training data list top left 'J' variant 1
    
    trainingDataListJ4 =  (129,[ 
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],9,'J',1,'O') # training data list top center 'J' variant 1

    trainingDataListJ5 =  (130,[ 
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,0,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],9,'J',1,'O') # training data list top right 'J' variant 1     
    
    trainingDataListJ6 =  (131,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,0,0,0,0,1,1,0,0,0,
    0,1,1,0,0,1,1,0,0,0,0,
    0,0,1,1,1,1,0,0,0,0,0,
    ],9,'J',1,'O') # training data list bottom left 'J' variant 2
    
    trainingDataListJ7 =  (132,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,1,0,0,0,0,1,1,0,
    0,0,0,1,1,0,0,1,1,0,0,
    0,0,0,0,1,1,1,1,0,0,0,
    ],9,'J',1,'O') # training data list bottom center 'J' variant 2

    trainingDataListJ8 =  (133,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,0,1,
    0,0,0,1,1,0,0,0,0,1,1,
    0,0,0,0,1,1,0,0,1,1,0,
    0,0,0,0,0,1,1,1,1,0,0,
    ],9,'J',1,'O') # training data list bottom right 'J' variant 2  
    
    trainingDataListJ9 =  (134,[
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,0,0,0,0,1,1,0,0,0,
    0,1,1,0,0,1,1,0,0,0,0,
    0,0,1,1,1,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],9,'J',1,'O') # training data list top left 'J' variant 2
    
    trainingDataListJ10 =  (135,[
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,1,0,0,0,0,1,1,0,
    0,0,0,1,1,0,0,1,1,0,0,
    0,0,0,0,1,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],9,'J',1,'O') # training data list top center 'J' variant 2

    trainingDataListJ11 =  (136,[
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,0,1,
    0,0,0,1,1,0,0,0,0,1,1,
    0,0,0,0,1,1,0,0,1,1,0,
    0,0,0,0,0,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],9,'J',1,'O') # training data list topright 'J' variant 2
   
########
#  K   #
########     

    trainingDataListK0 =  (11,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,1,1,0,0,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    ],10,'K',3,'X') # training data list bottom left 'K' variant 1
    
    trainingDataListK1 =  (137,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    ],10,'K',3,'X') # training data list bottom center 'K' variant 1

    trainingDataListK2 =  (138,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,1,0,0,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,1,0,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,1,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,0,0,1,
    ],10,'K',3,'X') # training data list bottom right 'K' variant 1
    
    trainingDataListK3 =  (139,[
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,1,1,0,0,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],10,'K',3,'X') # training data list top left 'K' variant 1
    
    trainingDataListK4 =  (140,[
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],10,'K',3,'X') # training data list top center 'K' variant 1

    trainingDataListK5 =  (141,[
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,1,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,1,0,0,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,1,0,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,1,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],10,'K',3,'X') # training data list top right 'K' variant 1
     
    trainingDataListK6 =  (142,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,1,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    1,0,1,0,0,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    ],10,'K',3,'X') # training data list bottom left 'K' variant 2
    
    trainingDataListK7 =  (143,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,1,0,1,0,0,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    ],10,'K',3,'X') # training data list bottom center 'K' variant 2

    trainingDataListK8 =  (144,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,1,0,0,0,0,1,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,1,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,1,0,0,1,0,0,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,1,0,0,0,0,1,
    ],10,'K',3,'X') # training data list bottom right 'K' variant 2      
         
    trainingDataListK9 =  (145,[
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,1,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    1,0,1,0,0,0,0,0,0,0,0,
    1,0,0,1,0,0,0,0,0,0,0,
    1,0,0,0,1,0,0,0,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],10,'K',3,'X') # training data list top left 'K' variant 2
    
    trainingDataListK10 =  (146,[
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,1,0,1,0,0,0,0,0,0,
    0,0,1,0,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],10,'K',3,'X') # training data list top center 'K' variant 2

    trainingDataListK11 =  (147,[
    0,0,0,0,0,1,0,0,0,0,1,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,1,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,1,0,0,1,0,0,
    0,0,0,0,0,1,0,0,0,1,0,
    0,0,0,0,0,1,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],10,'K',3,'X') # training data list top right 'K' variant 2    
    
########
#  L   #
########     

    trainingDataListL0 =  (12,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    ],11,'L',0,'L') # training data list bottom left 'L' variant 1
    
    trainingDataListL1 =  (148,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    ],11,'L',0,'L') # training data list bottom center 'L' variant 1

    trainingDataListL2 =  (149,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    ],11,'L',0,'L') # training data list bottom right 'L' variant 1    
    
    trainingDataListL3 =  (150,[
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],11,'L',0,'L') # training data list top left 'L' variant 1
    
    trainingDataListL4 =  (151,[ 
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],11,'L',0,'L') # training data list top center 'L' variant 1

    trainingDataListL5 =  (152,[ 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],11,'L',0,'L') # training data list top right 'L' variant 1  
    
    trainingDataListL6 =  (153,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    ],11,'L',0,'L') # training data list bottom left 'L' variant 2
    
    trainingDataListL7 =  (154,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    ],11,'L',0,'L') # training data list bottom center 'L' variant 2

    trainingDataListL8 =  (155,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,1,1,1,1,1,1,
    ],11,'L',0,'L') # training data list bottom right 'L' variant 2  
    
    trainingDataListL9 =  (156,[ 
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],11,'L',0,'L') # training data list top left 'L' variant 2
    
    trainingDataListL10 =  (157,[ 
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],11,'L',0,'L') # training data list top center 'L' variant 2

    trainingDataListL11 =  (158,[
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],11,'L',0,'L') # training data list bottom right 'L' variant 2  
                    
########
#  M   #
########     

    trainingDataListM0 =  (13,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,1,0,0,0,1,0,1,0,0,
    1,0,0,1,0,1,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],12,'M',4,'N') # training data list bottom left 'M' variant 1
    
    trainingDataListM1 =  (159,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,1,0,0,0,1,0,1,0,
    0,1,0,0,1,0,1,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],12,'M',4,'N') # training data list bottom center 'M' variant 1

    trainingDataListM2 =  (160,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,1,0,0,0,1,0,1,
    0,0,1,0,0,1,0,1,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],12,'M',4,'N') # training data list bottom right 'M' variant 1    
         
    trainingDataListM3 =  (161,[
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,1,0,0,0,1,0,1,0,0,
    1,0,0,1,0,1,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],12,'M',4,'N') # training data list top left 'M' variant 1
    
    trainingDataListM4 =  (162,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,1,0,0,0,1,0,1,0,
    0,1,0,0,1,0,1,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],12,'M',4,'N') # training data list top center 'M' variant 1

    trainingDataListM5 =  (163,[
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,1,0,0,0,1,0,1,
    0,0,1,0,0,1,0,1,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],12,'M',4,'N') # training data list bottom right 'M' variant 1  
   
    trainingDataListM6 =  (164,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,1,0,0,0,
    1,1,1,0,0,0,1,1,1,0,0,
    1,0,1,1,0,1,1,0,1,0,0,
    1,0,0,1,1,1,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],12,'M',4,'N') # training data list bottom left 'M' variant 2
    
    trainingDataListM7 =  (165,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,1,1,0,0,0,1,1,1,0,
    0,1,0,1,1,0,1,1,0,1,0,
    0,1,0,0,1,1,1,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],12,'M',4,'N') # training data list bottom center 'M' variant 2

    trainingDataListM8 =  (166,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,1,1,0,0,0,1,1,1,
    0,0,1,0,1,1,0,1,1,0,1,
    0,0,1,0,0,1,1,1,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],12,'M',4,'N') # training data list bottom right 'M' variant 1         
         
    trainingDataListM9 =  (167,[ 
    0,1,0,0,0,0,0,1,0,0,0,
    1,1,1,0,0,0,1,1,1,0,0,
    1,0,1,1,0,1,1,0,1,0,0,
    1,0,0,1,1,1,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],12,'M',4,'N') # training data list top left 'M' variant 2
    
    trainingDataListM10 =  (168,[
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,1,1,0,0,0,1,1,1,0,
    0,1,0,1,1,0,1,1,0,1,0,
    0,1,0,0,1,1,1,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],12,'M',4,'N') # training data list top center 'M' variant 2

    trainingDataListM11 =  (169,[ 
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,1,1,0,0,0,1,1,1,
    0,0,1,0,1,1,0,1,1,0,1,
    0,0,1,0,0,1,1,1,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],12,'M',4,'N') # training data list top right 'M' variant 1               
                  

########
#  N   #
########     

    trainingDataListN0 =  (14,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,0,1,0,0,
    1,0,1,0,0,0,0,0,1,0,0,
    1,0,0,1,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],13,'N',4,'N') # training data list bottom left 'N' variant 1
    
    trainingDataListN1 =  (170,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,0,1,0,
    0,1,0,1,0,0,0,0,0,1,0,
    0,1,0,0,1,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],13,'N',4,'N') # training data list bottom center 'N' variant 1

    trainingDataListN2 =  (171,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,0,1,
    0,0,1,0,1,0,0,0,0,0,1,
    0,0,1,0,0,1,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],13,'N',4,'N') # training data list bottom right 'N' variant 1    

    trainingDataListN3 =  (172,[ 
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,0,1,0,0,
    1,0,1,0,0,0,0,0,1,0,0,
    1,0,0,1,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],13,'N',4,'N') # training data list top left 'N' variant 1
    
    trainingDataListN4 =  (173,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,0,1,0,
    0,1,0,1,0,0,0,0,0,1,0,
    0,1,0,0,1,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],13,'N',4,'N') # training data list top center 'N' variant 1

    trainingDataListN5 =  (174,[
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,0,1,
    0,0,1,0,1,0,0,0,0,0,1,
    0,0,1,0,0,1,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],13,'N',4,'N') # training data list top right 'N' variant 1   

    trainingDataListN6 =  (175,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,0,0,0,0,0,1,0,0,0,
    1,1,1,0,0,0,0,1,0,0,0,
    1,0,1,1,0,0,0,1,0,0,0,
    1,0,0,1,1,0,0,1,0,0,0,
    1,0,0,0,1,1,0,1,0,0,0,
    1,0,0,0,0,1,1,1,0,0,0,
    1,0,0,0,0,0,1,1,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    ],13,'N',4,'N') # training data list bottom left 'N' variant 2
    
    trainingDataListN7 =  (176,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,1,0,0,0,0,0,1,0,0,
    0,1,1,1,0,0,0,0,1,0,0,
    0,1,0,1,1,0,0,0,1,0,0,
    0,1,0,0,1,1,0,0,1,0,0,
    0,1,0,0,0,1,1,0,1,0,0,
    0,1,0,0,0,0,1,1,1,0,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    ],13,'N',4,'N') # training data list bottom center 'N' variant 2

    trainingDataListN8 =  (177,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,0,1,
    0,0,0,1,1,0,0,0,0,0,1,
    0,0,0,1,1,1,0,0,0,0,1,
    0,0,0,1,0,1,1,0,0,0,1,
    0,0,0,1,0,0,1,1,0,0,1,
    0,0,0,1,0,0,0,1,1,0,1,
    0,0,0,1,0,0,0,0,1,1,1,
    0,0,0,1,0,0,0,0,0,1,1,
    0,0,0,1,0,0,0,0,0,0,1,
    ],13,'N',4,'N') # training data list bottom right 'N' variant 2    

    trainingDataListN9 =  (178,[
    1,0,0,0,0,0,0,1,0,0,0,
    1,1,0,0,0,0,0,1,0,0,0,
    1,1,1,0,0,0,0,1,0,0,0,
    1,0,1,1,0,0,0,1,0,0,0,
    1,0,0,1,1,0,0,1,0,0,0,
    1,0,0,0,1,1,0,1,0,0,0,
    1,0,0,0,0,1,1,1,0,0,0,
    1,0,0,0,0,0,1,1,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],13,'N',4,'N') # training data list top left 'N' variant 2
    
    trainingDataListN10 =  (179,[ 
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,1,0,0,0,0,0,1,0,0,
    0,1,1,1,0,0,0,0,1,0,0,
    0,1,0,1,1,0,0,0,1,0,0,
    0,1,0,0,1,1,0,0,1,0,0,
    0,1,0,0,0,1,1,0,1,0,0,
    0,1,0,0,0,0,1,1,1,0,0,
    0,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],13,'N',4,'N') # training data list top center 'N' variant 2

    trainingDataListN11 =  (180,[ 
    0,0,0,1,0,0,0,0,0,0,1,
    0,0,0,1,1,0,0,0,0,0,1,
    0,0,0,1,1,1,0,0,0,0,1,
    0,0,0,1,0,1,1,0,0,0,1,
    0,0,0,1,0,0,1,1,0,0,1,
    0,0,0,1,0,0,0,1,1,0,1,
    0,0,0,1,0,0,0,0,1,1,1,
    0,0,0,1,0,0,0,0,0,1,1,
    0,0,0,1,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],13,'N',4,'N') # training data list top right 'N' variant 1    

########
#  O   #
########                        

    trainingDataListO0 =  (15,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],14,'O',1,'O')  # training data list bottom left 'O' variant 1
    
    trainingDataListO1 =  (181,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],14,'O',1,'O')  # training data list bottom center 'O' variant 1

    trainingDataListO2 =  (182,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],14,'O',1,'O')  # training data list bottom right 'O' variant 1  
    
    trainingDataListO3 =  (183,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],14,'O',1,'O')  # training data list top left 'O' variant 1
    
    trainingDataListO4 =  (184,[ 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],14,'O',1,'O')  # training data list top center 'O' variant 1

    trainingDataListO5 =  (185,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],14,'O',1,'O')  # training data list top right 'O' variant 1  

    trainingDataListO6 =  (186,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],14,'O',1,'O')  # training data list bottom left 'O' variant 2
    
    trainingDataListO7 =  (187,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],14,'O',1,'O')  # training data list bottom center 'O' variant 2

    trainingDataListO8 =  (188,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],14,'O',1,'O')  # training data list bottom right 'O' variant 2  
    
    trainingDataListO9 =  (189,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],14,'O',1,'O')  # training data list top left 'O' variant 2
    
    trainingDataListO10 =  (190,[ 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],14,'O',1,'O')  # training data list top center 'O' variant 2

    trainingDataListO11 =  (191,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],14,'O',1,'O')  # training data list top right 'O' variant 2  

########
#  P   #
########                        

    trainingDataListP0 =  (16,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F')  # training data list bottom left 'P' variant 1
    
    trainingDataListP1 =  (192,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F')  # training data list bottom center 'P' variant 1

    trainingDataListP2 =  (193,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F') # training data list bottom right 'P' variant 1 
    
    trainingDataListP3 =  (194,[ 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],15,'P',2,'F')  # training data list top left 'P' variant 1
    
    trainingDataListP4 =  (195,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],15,'P',2,'F')  # training data list top center 'P' variant 1

    trainingDataListP5 =  (196,[ 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F') # training data list top right 'P' variant 1 
                      
    trainingDataListP6 =  (197,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F')  # training data list bottom left 'P' variant 2
    
    trainingDataListP7 =  (198,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F')  # training data list bottom center 'P' variant 2

    trainingDataListP8 =  (199,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F') # training data list bottom right 'P' variant 2 
    
    trainingDataListP9 =  (200,[ 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    1,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],15,'P',2,'F')  # training data list top left 'P' variant 2
    
    trainingDataListP10 =  (201,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],15,'P',2,'F')  # training data list top center 'P' variant 2

    trainingDataListP11 =  (202,[ 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],15,'P',2,'F') # training data list top right 'P' variant 2 
 
########
#  Q   #
########                        

    trainingDataListQ0 =  (17,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],16,'Q',1,'O') # training data list bottom left 'Q' variant 1
    
    trainingDataListQ1 =  (203,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],16,'Q',1,'O')  # training data list bottom center 'Q' variant 1

    trainingDataListQ2 =  (204,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],16,'Q',1,'O')  # training data list bottom right 'Q' variant 1  
    
    trainingDataListQ3 =  (205,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],16,'Q',1,'O')  # training data list top left 'Q' variant 1
    
    trainingDataListQ4 =  (206,[ 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],16,'Q',1,'O')  # training data list top center 'Q' variant 1

    trainingDataListQ5 =  (207,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],16,'Q',1,'O')  # training data list top right 'Q' variant 1  

    trainingDataListQ6 =  (208,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],16,'Q',1,'O') # training data list bottom left 'Q' variant 2
    
    trainingDataListQ7 =  (209,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    ],16,'Q',1,'O')  # training data list bottom center 'Q' variant 2

    trainingDataListQ8 =  (210,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,  
    ],16,'Q',1,'O')  # training data list bottom right 'Q' variant 2  
    
    trainingDataListQ9 =  (211,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,1,0,0,1,0,0,
    1,0,0,0,0,0,1,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],16,'Q',1,'O')  # training data list top left 'Q' variant 2
    
    trainingDataListQ10 =  (212,[ 
    0,0,1,1,1,1,1,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,0,1,0,
    0,1,0,0,0,0,0,1,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,  
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],16,'Q',1,'O')  # training data list top center 'Q' variant 2

    trainingDataListQ11 =  (213,[
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,1,0,0,1,
    0,0,1,0,0,0,0,0,1,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,  
    ],16,'Q',1,'O') # training data list top right 'Q' variant 2             
                               
########
#  R   #
########                        

    trainingDataListR0 =  (18,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0, 
    ],17,'R',2,'F')  # training data list bottom left 'R' variant 1
    
    trainingDataListR1 =  (214,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0, 
    ],17,'R',2,'F')  # training data list bottom center 'R' variant 1

    trainingDataListR2 =  (215,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1, 
    ],17,'R',2,'F') # training data list bottom right 'R' variant 1 
    
    trainingDataListR3 =  (216,[ 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],17,'R',2,'F')  # training data list top left 'R' variant 1
    
    trainingDataListR4 =  (217,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],17,'R',2,'F')  # training data list top center 'R' variant 1

    trainingDataListR5 =  (218,[ 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],17,'R',2,'F') # training data list top right 'R' variant 1 
                      
    trainingDataListR6 =  (219,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0, 
    ],17,'R',2,'F')  # training data list bottom left 'R' variant 2
    
    trainingDataListR7 =  (220,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0, 
    ],17,'R',2,'F')  # training data list bottom center 'R' variant 2

    trainingDataListR8 =  (221,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1, 
    ],17,'R',2,'F')  # training data list bottom right 'R' variant 2 
    
    trainingDataListR9 =  (222,[ 
    1,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,1,1,0,0,
    1,1,1,1,1,1,1,1,0,0,0,
    1,0,0,0,0,1,0,0,0,0,0,
    1,0,0,0,0,0,1,0,0,0,0,
    1,0,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],17,'R',2,'F')  # training data list top left 'R' variant 2
    
    trainingDataListR10 =  (223,[
    0,1,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,1,1,0,
    0,1,1,1,1,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,1,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],17,'R',2,'F')  # training data list top center 'R' variant 2

    trainingDataListR11 =  (224,[ 
    0,0,1,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,1,1,1,1,1,0,
    0,0,1,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,1,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],17,'R',2,'F') # training data list top right 'R' variant 2   

########
#  S  #
########                        

    trainingDataListS0 =  (19,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],18,'S',1,'O')  # training data list bottom left 'S' variant 1
    
    trainingDataListS1 =  (225,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    ],18,'S',1,'O')  # training data list bottom center 'S' variant 1

    trainingDataListS2 =  (226,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,1,1,0,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    ],18,'S',1,'O') # training data list bottom right 'S' variant 1 
    
    trainingDataListS3 =  (227,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],18,'S',1,'O')  # training data list top left 'S' variant 1
    
    trainingDataListS4 =  (228,[ 
    0,0,1,1,1,1,1,1,1,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],18,'S',1,'O')  # training data list top center 'S' variant 1

    trainingDataListS5 =  (229,[ 
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,1,1,0,
    0,0,0,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],18,'S',1,'O') # training data list top right 'S' variant 1 
    
    trainingDataListS6 =  (230,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,1,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0, 
    ],18,'S',1,'O')  # training data list bottom left 'S' variant 2
    
    trainingDataListS7 =  (231,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0, 
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,0,1,1,1,0,0,
    0,0,0,0,0,0,0,0,1,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    ],18,'S',1,'O')  # training data list bottom center 'S' variant 2

    trainingDataListS8 =  (232,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,1,1,1,0,
    0,0,0,0,0,0,0,0,0,1,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,
    ],18,'S',1,'O') # training data list bottom right 'S' variant 2 
    
    trainingDataListS9 =  (233,[
    0,1,1,1,1,1,1,1,0,0,0, 
    1,1,0,0,0,0,0,1,1,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    0,1,1,1,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,1,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],18,'S',1,'O')  # training data list top left 'S' variant 2
    
    trainingDataListS10 =  (234,[  
    0,0,1,1,1,1,1,1,1,0,0, 
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,0,1,1,1,0,0,0,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,0,1,1,1,0,0,
    0,0,0,0,0,0,0,0,1,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],18,'S',1,'O')  # training data list top center 'S' variant 2

    trainingDataListS11 =  (235,[ 
    0,0,0,1,1,1,1,1,1,1,0, 
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,0,1,1,1,0,
    0,0,0,0,0,0,0,0,0,1,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],18,'S',1,'O') # training data list top right 'S' variant 2 

########
#  T  #
########                        

    trainingDataListT0 =  (20,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0, 
    ],19,'T',2,'F')  # training data list bottom left 'T' variant 1
    
    trainingDataListT1 =  (236,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list bottom center 'T' variant 1

    trainingDataListT2 =  (237,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    ],19,'T',2,'F') # training data list bottom right 'T' variant 1   
    
    trainingDataListT3 =  (238,[ 
    1,1,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list top left 'T' variant 1
    
    trainingDataListT4 =  (239,[ 
    0,1,1,1,1,1,1,1,1,1,0, 
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list top center 'T' variant 1

    trainingDataListT5 =  (240,[ 
    0,0,1,1,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],19,'T',2,'F') # training data list top right 'T' variant 1
    
    trainingDataListT6 =  (241,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list bottom left 'T' variant 2
    
    trainingDataListT7 =  (242,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list bottom center 'T' variant 2

    trainingDataListT8 =  (243,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    ],19,'T',2,'F') # training data list bottom right 'T' variant 2   
    
    trainingDataListT9 =  (244,[ 
    1,1,1,1,1,1,1,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0, 
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],19,'T',2,'F')  # training data list top left 'T' variant 2
    
    trainingDataListT10 =  (245,[  
    0,0,1,1,1,1,1,1,1,0,0, 
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],19,'T',2,'F')  # training data list top center 'T' variant 2

    trainingDataListT11 =  (246,[ 
    0,0,0,0,1,1,1,1,1,1,1, 
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],19,'T',2,'F') # training data list top right 'T' variant 2


########
#  U  #
########                        

    trainingDataListU0 =  (21,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    ],20,'U',4,'N')  # training data list bottom left 'U' variant 1
    
    trainingDataListU1 =  (247,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,
    ],20,'U',4,'N')  # training data list bottom center 'U' variant 1

    trainingDataListU2 =  (248,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,
    ],20,'U',4,'N') # training data list bottom right 'U' variant 1      
    
    trainingDataListU3 =  (249,[ 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N')  # training data list top left 'U' variant 1
    
    trainingDataListU4 =  (250,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N')  # training data list top center 'U' variant 1

    trainingDataListU5 =  (251,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N') # training data list top right 'U' variant 1     
    
    trainingDataListU6 =  (252,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    ],20,'U',4,'N')  # training data list bottom left 'U' variant 2
    
    trainingDataListU7 =  (253,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,
    ],20,'U',4,'N')  # training data list bottom center 'U' variant 2

    trainingDataListU8 =  (254,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,
    ],20,'U',4,'N') # training data list bottom right 'U' variant 2      
    
    trainingDataListU9 =  (255,[ 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,1,1,1,1,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N')  # training data list top left 'U' variant 2
    
    trainingDataListU10 =  (256,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N')  # training data list top center 'U' variant 2

    trainingDataListU11 =  (257,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],20,'U',4,'N') # training data list top right 'U' variant 2 
    
########
#  V  #
########                        

    trainingDataListV0 =  (22,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list bottom left 'V' variant 1
    
    trainingDataListV1 =  (258,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list bottom center 'V' variant 1

    trainingDataListV2 =  (259,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    ],21,'V',3,'X') # training data list bottom right 'V' variant 1   
    
    trainingDataListV3 =  (260,[ 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list top left 'V' variant 1
    
    trainingDataListV4 =  (261,[
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list top center 'V' variant 1

    trainingDataListV5 =  (262,[
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],21,'V',3,'X') # training data list top right 'V' variant 1     
    
    trainingDataListV6 =  (263,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list bottom left 'V' variant 2
    
    trainingDataListV7 =  (264,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list bottom center 'V' variant 2

    trainingDataListV8 =  (265,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    ],21,'V',3,'X') # training data list bottom right 'V' variant 2   
    
    trainingDataListV9 =  (266,[  
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,1,1,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],21,'V',3,'X')  # training data list top left 'V' variant 2
    
    trainingDataListV10 =  (267,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,1,1,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],21,'V',3,'X')  # training data list top center 'V' variant 2

    trainingDataListV11 =  (268,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,1,1,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],21,'V',3,'X') # training data list top right 'V' variant 2   
    
    
########
#  W  #
########                        

    trainingDataListW0 =  (23,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,1,0,1,0,0,1,0,0,
    1,0,1,0,0,0,1,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],22,'W',4,'N')  # training data list bottom left 'W' variant 1
    
    trainingDataListW1 =  (269,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,1,0,1,0,0,1,0,
    0,1,0,1,0,0,0,1,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],22,'W',4,'N')  # training data list bottom center 'W' variant 1

    trainingDataListW2 =  (270,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,1,0,1,0,0,1,
    0,0,1,0,1,0,0,0,1,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],22,'W',4,'N') # training data list bottom right 'W' variant 1      
    
    trainingDataListW3 =  (271,[ 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,1,0,1,0,0,1,0,0,
    1,0,1,0,0,0,1,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],22,'W',4,'N')  # training data list top left 'W' variant 1
    
    trainingDataListW4 =  (272,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,1,0,1,0,0,1,0,
    0,1,0,1,0,0,0,1,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],22,'W',4,'N')  # training data list top center 'W' variant 1

    trainingDataListW5 =  (273,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,1,0,1,0,0,1,
    0,0,1,0,1,0,0,0,1,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],22,'W',4,'N') # training data list top right 'W' variant 1  


    trainingDataListW6 =  (274,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,1,1,1,0,0,1,0,0,
    1,0,1,1,0,1,1,0,1,0,0,
    1,1,1,0,0,0,1,1,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    ],22,'W',4,'N')  # training data list bottom left 'W' variant 2
    
    trainingDataListW7 =  (275,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,1,1,1,0,0,1,0,
    0,1,0,1,1,0,1,1,0,1,0,
    0,1,1,1,0,0,0,1,1,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    ],22,'W',4,'N')  # training data list bottom center 'W' variant 2

    trainingDataListW8 =  (276,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,1,1,1,0,0,1,
    0,0,1,0,1,1,0,1,1,0,1,
    0,0,1,1,1,0,0,0,1,1,1,
    0,0,0,1,0,0,0,0,0,1,0,
    ],22,'W',4,'N') # training data list bottom right 'W' variant 2      
    
    trainingDataListW9 =  (277,[  
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    1,0,0,0,1,0,0,0,1,0,0,
    1,0,0,1,1,1,0,0,1,0,0,
    1,0,1,1,0,1,1,0,1,0,0,
    1,1,1,0,0,0,1,1,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],22,'W',4,'N')  # training data list top left 'W' variant 2
    
    trainingDataListW10 =  (278,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,0,0,0,1,0,0,0,1,0,
    0,1,0,0,1,0,1,0,0,1,0,
    0,1,0,1,0,0,0,1,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],22,'W',4,'N')  # training data list top center 'W' variant 2

    trainingDataListW11 =  (279,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,0,0,0,1,0,0,0,1,
    0,0,1,0,0,1,1,1,0,0,1,
    0,0,1,0,1,1,0,1,1,0,1,
    0,0,1,1,1,0,0,0,1,1,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],22,'W',4,'N') # training data list top right 'W' variant 2  

########
#  X  #
########                        

    trainingDataListX0 =  (24,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],23,'X',3,'X')  # training data list bottom left 'X' variant 1
    
    trainingDataListX1 =  (280,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],23,'X',3,'X')  # training data list bottom center 'X' variant 1

    trainingDataListX2 =  (281,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    ],23,'X',3,'X') # training data list bottom right 'X' variant 1  
    
    trainingDataListX3 =  (282,[
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],23,'X',3,'X')  # training data list top left 'X' variant 1
    
    trainingDataListX4 =  (283,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],23,'X',3,'X')  # training data list top center 'X' variant 1

    trainingDataListX5 =  (284,[
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],23,'X',3,'X') # training data list top right 'X' variant 1  
    
    trainingDataListX6 =  (285,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    ],23,'X',3,'X')  # training data list bottom left 'X' variant 2
    
    trainingDataListX7 =  (286,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    ],23,'X',3,'X')  # training data list bottom center 'X' variant 2

    trainingDataListX8 =  (287,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1,
    ],23,'X',3,'X') # training data list bottom right 'X' variant 2 
    
    trainingDataListX9 =  (288,[
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    1,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],23,'X',3,'X')  # training data list top left 'X' variant 2
    
    trainingDataListX10 =  (289,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],23,'X',3,'X')  # training data list top center 'X' variant 2

    trainingDataListX11 =  (290,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],23,'X',3,'X') # training data list top right 'X' variant 2  
    
########
#  Y  #
########                        

    trainingDataListY0 =  (25,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    ],24,'Y',3,'X')   # training data list bottom left 'Y' variant 1
    
    trainingDataListY1 =  (291,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],24,'Y',3,'X')  # training data list bottom center 'Y' variant 1

    trainingDataListY2 =  (292,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    ],24,'Y',3,'X') # training data list bottom right 'Y' variant 1  
    
    trainingDataListY3 =  (293,[
    1,0,0,0,0,0,0,0,1,0,0,
    0,1,0,0,0,0,0,1,0,0,0,
    0,0,1,0,0,0,1,0,0,0,0,
    0,0,0,1,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],24,'Y',3,'X')  # training data list top left 'Y' variant 1
    
    trainingDataListY4 =  (294,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,0,1,0,0,0,0,0,1,0,0,
    0,0,0,1,0,0,0,1,0,0,0,
    0,0,0,0,1,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],24,'Y',3,'X')  # training data list top center 'Y variant 1

    trainingDataListY5 =  (295,[
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,0,1,0,0,0,0,0,1,0,
    0,0,0,0,1,0,0,0,1,0,0,
    0,0,0,0,0,1,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],24,'Y',3,'X') # training data list top right 'Y' variant 1  
    
    trainingDataListY6 =  (296,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    ],24,'Y',3,'X')  # training data list bottom left 'Y' variant 2
    
    trainingDataListY7 =  (297,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    ],24,'Y',3,'X')  # training data list bottom center 'Y' variant 2

    trainingDataListY8 =  (298,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    ],24,'Y',3,'X') # training data list bottom right 'Y' variant 2 
    
    trainingDataListY9 =  (299,[
    1,0,0,0,0,0,0,0,1,0,0,
    1,1,0,0,0,0,0,1,1,0,0,
    0,1,1,0,0,0,1,1,0,0,0,
    0,0,1,1,0,1,1,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],24,'Y',3,'X')  # training data list top left 'Y' variant 2
    
    trainingDataListY10 =  (300,[ 
    0,1,0,0,0,0,0,0,0,1,0,
    0,1,1,0,0,0,0,0,1,1,0,
    0,0,1,1,0,0,0,1,1,0,0,
    0,0,0,1,1,0,1,1,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],24,'Y',3,'X')  # training data list top center 'Y' variant 2

    trainingDataListY11 =  (301,[ 
    0,0,1,0,0,0,0,0,0,0,1,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,1,1,0,1,1,0,0,
    0,0,0,1,1,0,0,0,1,1,0,
    0,0,1,1,0,0,0,0,0,1,1,
    0,0,1,0,0,0,0,0,0,0,1, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],24,'Y',3,'X') # training data list top right 'X' variant 2
  
########
#  Z  #
########                        

    trainingDataListZ0 =  (26,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    ],25,'Z',0,'L')    # training data list bottom left 'Z' variant 1
    
    trainingDataListZ1 =  (302,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    ],25,'Z',0,'L')   # training data list bottom center 'Z' variant 1

    trainingDataListZ2 =  (303,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    ],25,'Z',0,'L')  # training data list bottom right 'Z' variant 1  
    
    trainingDataListZ3 =  (304,[ 
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],25,'Z',0,'L')    # training data list top left 'Z' variant 1
    
    trainingDataListZ4 =  (305,[
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0
    ],25,'Z',0,'L')   # training data list top center 'Z' variant 1

    trainingDataListZ5 =  (306,[
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,0,0,1,0,0,
    0,0,0,0,0,0,0,1,0,0,0,
    0,0,0,0,0,0,1,0,0,0,0,
    0,0,0,0,0,1,0,0,0,0,0,
    0,0,0,0,1,0,0,0,0,0,0,
    0,0,0,1,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],25,'Z',0,'L')  # training data list top right 'Z' variant 1  
    
    trainingDataListZ6 =  (307,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    ],25,'Z',0,'L')    # training data list bottom left 'Z' variant 2
    
    trainingDataListZ7 =  (308,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    ],25,'Z',0,'L')   # training data list bottom center 'Z' variant 2

    trainingDataListZ8 =  (309,[
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,1,1,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    ],25,'Z',0,'L')  # training data list bottom right 'Z' variant 2  
    
    trainingDataListZ9 =  (310,[ 
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    1,1,0,0,0,0,0,0,0,0,0,
    1,1,1,1,1,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0,
    ],25,'Z',0,'L')    # training data list top left 'Z' variant 2
    
    trainingDataListZ10 =  (311,[
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,1,1,0,0,0,0,0,0,0,0,
    0,1,1,1,1,1,1,1,1,1,0,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0
    ],25,'Z',0,'L')   # training data list top center 'Z' variant 2

    trainingDataListZ11 =  (312,[
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,1,1,0,
    0,0,0,0,0,0,0,1,1,0,0,
    0,0,0,0,0,0,1,1,0,0,0,
    0,0,0,0,0,1,1,0,0,0,0,
    0,0,0,0,1,1,0,0,0,0,0,
    0,0,0,1,1,0,0,0,0,0,0,
    0,0,1,1,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,0,0,0, 
    0,0,0,0,0,0,0,0,0,0,0, 
    ],25,'Z',0,'L')  # training data list top right 'Z' variant 2 

       
    if dataSet == 1: trainingDataList = trainingDataListA0
    if dataSet == 2: trainingDataList = trainingDataListA1    
    if dataSet == 3: trainingDataList = trainingDataListA2
    if dataSet == 4: trainingDataList = trainingDataListA3
    if dataSet == 5: trainingDataList = trainingDataListA4        
    if dataSet == 6: trainingDataList = trainingDataListA5
    if dataSet == 7: trainingDataList = trainingDataListA6
    if dataSet == 8: trainingDataList = trainingDataListA7   
    if dataSet == 9: trainingDataList = trainingDataListA8 
    if dataSet == 10: trainingDataList = trainingDataListA9
    if dataSet == 11: trainingDataList = trainingDataListA10  
    if dataSet == 12: trainingDataList = trainingDataListA11 
                                                                                                 
    if dataSet == 13: trainingDataList = trainingDataListB0
    if dataSet == 14: trainingDataList = trainingDataListB1    
    if dataSet == 15: trainingDataList = trainingDataListB2
    if dataSet == 16: trainingDataList = trainingDataListB3
    if dataSet == 17: trainingDataList = trainingDataListB4        
    if dataSet == 18: trainingDataList = trainingDataListB5
    if dataSet == 19: trainingDataList = trainingDataListB6
    if dataSet == 20: trainingDataList = trainingDataListB7   
    if dataSet == 21: trainingDataList = trainingDataListB8 
    if dataSet == 22: trainingDataList = trainingDataListB9
    if dataSet == 23: trainingDataList = trainingDataListB10  
    if dataSet == 24: trainingDataList = trainingDataListB11 
    
    if dataSet == 25: trainingDataList = trainingDataListC0
    if dataSet == 26: trainingDataList = trainingDataListC1    
    if dataSet == 27: trainingDataList = trainingDataListC2
    if dataSet == 28: trainingDataList = trainingDataListC3
    if dataSet == 29: trainingDataList = trainingDataListC4        
    if dataSet == 30: trainingDataList = trainingDataListC5
    if dataSet == 31: trainingDataList = trainingDataListC6
    if dataSet == 32: trainingDataList = trainingDataListC7   
    if dataSet == 33: trainingDataList = trainingDataListC8 
    if dataSet == 34: trainingDataList = trainingDataListC9
    if dataSet == 35: trainingDataList = trainingDataListC10  
    if dataSet == 36: trainingDataList = trainingDataListC11 
    
    if dataSet == 37: trainingDataList = trainingDataListD0
    if dataSet == 38: trainingDataList = trainingDataListD1    
    if dataSet == 39: trainingDataList = trainingDataListD2
    if dataSet == 40: trainingDataList = trainingDataListD3
    if dataSet == 41: trainingDataList = trainingDataListD4        
    if dataSet == 42: trainingDataList = trainingDataListD5
    if dataSet == 43: trainingDataList = trainingDataListD6
    if dataSet == 44: trainingDataList = trainingDataListD7   
    if dataSet == 45: trainingDataList = trainingDataListD8 
    if dataSet == 46: trainingDataList = trainingDataListD9
    if dataSet == 47: trainingDataList = trainingDataListD10  
    if dataSet == 48: trainingDataList = trainingDataListD11 
    
    if dataSet == 49: trainingDataList = trainingDataListE0
    if dataSet == 50: trainingDataList = trainingDataListE1    
    if dataSet == 51: trainingDataList = trainingDataListE2
    if dataSet == 52: trainingDataList = trainingDataListE3
    if dataSet == 53: trainingDataList = trainingDataListE4        
    if dataSet == 54: trainingDataList = trainingDataListE5
    if dataSet == 55: trainingDataList = trainingDataListE6
    if dataSet == 56: trainingDataList = trainingDataListE7   
    if dataSet == 57: trainingDataList = trainingDataListE8 
    if dataSet == 58: trainingDataList = trainingDataListE9
    if dataSet == 59: trainingDataList = trainingDataListE10  
    if dataSet == 60: trainingDataList = trainingDataListE11 
    
    if dataSet == 61: trainingDataList = trainingDataListF0
    if dataSet == 62: trainingDataList = trainingDataListF1    
    if dataSet == 63: trainingDataList = trainingDataListF2
    if dataSet == 64: trainingDataList = trainingDataListF3
    if dataSet == 65: trainingDataList = trainingDataListF4        
    if dataSet == 66: trainingDataList = trainingDataListF5
    if dataSet == 67: trainingDataList = trainingDataListF6
    if dataSet == 68: trainingDataList = trainingDataListF7   
    if dataSet == 69: trainingDataList = trainingDataListF8 
    if dataSet == 70: trainingDataList = trainingDataListF9
    if dataSet == 71: trainingDataList = trainingDataListF10  
    if dataSet == 72: trainingDataList = trainingDataListF11 
    
    if dataSet == 73: trainingDataList = trainingDataListG0
    if dataSet == 74: trainingDataList = trainingDataListG1    
    if dataSet == 75: trainingDataList = trainingDataListG2
    if dataSet == 76: trainingDataList = trainingDataListG3
    if dataSet == 77: trainingDataList = trainingDataListG4        
    if dataSet == 78: trainingDataList = trainingDataListG5
    if dataSet == 79: trainingDataList = trainingDataListG6
    if dataSet == 80: trainingDataList = trainingDataListG7   
    if dataSet == 81: trainingDataList = trainingDataListG8 
    if dataSet == 82: trainingDataList = trainingDataListG9
    if dataSet == 83: trainingDataList = trainingDataListG10  
    if dataSet == 84: trainingDataList = trainingDataListG11     
    
    if dataSet == 85: trainingDataList = trainingDataListH0
    if dataSet == 86: trainingDataList = trainingDataListH1    
    if dataSet == 87: trainingDataList = trainingDataListH2
    if dataSet == 88: trainingDataList = trainingDataListH3
    if dataSet == 89: trainingDataList = trainingDataListH4        
    if dataSet == 90: trainingDataList = trainingDataListH5
    if dataSet == 91: trainingDataList = trainingDataListH6
    if dataSet == 92: trainingDataList = trainingDataListH7   
    if dataSet == 93: trainingDataList = trainingDataListH8 
    if dataSet == 94: trainingDataList = trainingDataListH9
    if dataSet == 95: trainingDataList = trainingDataListH10  
    if dataSet == 96: trainingDataList = trainingDataListH11                                                                                                                                                                                                                
    
    if dataSet == 97: trainingDataList = trainingDataListI0
    if dataSet == 98: trainingDataList = trainingDataListI1    
    if dataSet == 99: trainingDataList = trainingDataListI2
    if dataSet == 100: trainingDataList = trainingDataListI3
    if dataSet == 101: trainingDataList = trainingDataListI4        
    if dataSet == 102: trainingDataList = trainingDataListI5
    if dataSet == 103: trainingDataList = trainingDataListI6
    if dataSet == 104: trainingDataList = trainingDataListI7   
    if dataSet == 105: trainingDataList = trainingDataListI8 
    if dataSet == 106: trainingDataList = trainingDataListI9
    if dataSet == 107: trainingDataList = trainingDataListI10  
    if dataSet == 108: trainingDataList = trainingDataListI11       
    
    if dataSet == 109: trainingDataList = trainingDataListJ0
    if dataSet == 110: trainingDataList = trainingDataListJ1    
    if dataSet == 111: trainingDataList = trainingDataListJ2
    if dataSet == 112: trainingDataList = trainingDataListJ3
    if dataSet == 113: trainingDataList = trainingDataListJ4        
    if dataSet == 114: trainingDataList = trainingDataListJ5
    if dataSet == 115: trainingDataList = trainingDataListJ6
    if dataSet == 116: trainingDataList = trainingDataListJ7   
    if dataSet == 117: trainingDataList = trainingDataListJ8 
    if dataSet == 118: trainingDataList = trainingDataListJ9
    if dataSet == 119: trainingDataList = trainingDataListJ10  
    if dataSet == 120: trainingDataList = trainingDataListJ11   
    
    if dataSet == 121: trainingDataList = trainingDataListK0
    if dataSet == 122: trainingDataList = trainingDataListK1    
    if dataSet == 123: trainingDataList = trainingDataListK2
    if dataSet == 124: trainingDataList = trainingDataListK3
    if dataSet == 125: trainingDataList = trainingDataListK4        
    if dataSet == 126: trainingDataList = trainingDataListK5
    if dataSet == 127: trainingDataList = trainingDataListK6
    if dataSet == 128: trainingDataList = trainingDataListK7   
    if dataSet == 129: trainingDataList = trainingDataListK8 
    if dataSet == 130: trainingDataList = trainingDataListK9
    if dataSet == 131: trainingDataList = trainingDataListK10  
    if dataSet == 132: trainingDataList = trainingDataListK11     
    
    if dataSet == 133: trainingDataList = trainingDataListL0
    if dataSet == 134: trainingDataList = trainingDataListL1    
    if dataSet == 135: trainingDataList = trainingDataListL2
    if dataSet == 136: trainingDataList = trainingDataListL3
    if dataSet == 137: trainingDataList = trainingDataListL4        
    if dataSet == 138: trainingDataList = trainingDataListL5
    if dataSet == 139: trainingDataList = trainingDataListL6
    if dataSet == 140: trainingDataList = trainingDataListL7   
    if dataSet == 141: trainingDataList = trainingDataListL8 
    if dataSet == 142: trainingDataList = trainingDataListL9
    if dataSet == 143: trainingDataList = trainingDataListL10  
    if dataSet == 144: trainingDataList = trainingDataListL11     
    
    if dataSet == 145: trainingDataList = trainingDataListM0
    if dataSet == 146: trainingDataList = trainingDataListM1    
    if dataSet == 147: trainingDataList = trainingDataListM2
    if dataSet == 148: trainingDataList = trainingDataListM3
    if dataSet == 149: trainingDataList = trainingDataListM4        
    if dataSet == 150: trainingDataList = trainingDataListM5
    if dataSet == 151: trainingDataList = trainingDataListM6
    if dataSet == 152: trainingDataList = trainingDataListM7   
    if dataSet == 153: trainingDataList = trainingDataListM8 
    if dataSet == 154: trainingDataList = trainingDataListM9
    if dataSet == 155: trainingDataList = trainingDataListM10  
    if dataSet == 156: trainingDataList = trainingDataListM11    
    
    if dataSet == 157: trainingDataList = trainingDataListN0
    if dataSet == 158: trainingDataList = trainingDataListN1    
    if dataSet == 159: trainingDataList = trainingDataListN2
    if dataSet == 160: trainingDataList = trainingDataListN3
    if dataSet == 161: trainingDataList = trainingDataListN4        
    if dataSet == 162: trainingDataList = trainingDataListN5
    if dataSet == 163: trainingDataList = trainingDataListN6
    if dataSet == 164: trainingDataList = trainingDataListN7   
    if dataSet == 165: trainingDataList = trainingDataListN8 
    if dataSet == 166: trainingDataList = trainingDataListN9
    if dataSet == 167: trainingDataList = trainingDataListN10  
    if dataSet == 168: trainingDataList = trainingDataListN11     
    
    if dataSet == 169: trainingDataList = trainingDataListO0
    if dataSet == 170: trainingDataList = trainingDataListO1    
    if dataSet == 171: trainingDataList = trainingDataListO2
    if dataSet == 172: trainingDataList = trainingDataListO3
    if dataSet == 173: trainingDataList = trainingDataListO4        
    if dataSet == 174: trainingDataList = trainingDataListO5
    if dataSet == 175: trainingDataList = trainingDataListO6
    if dataSet == 176: trainingDataList = trainingDataListO7   
    if dataSet == 177: trainingDataList = trainingDataListO8 
    if dataSet == 178: trainingDataList = trainingDataListO9
    if dataSet == 179: trainingDataList = trainingDataListO10  
    if dataSet == 180: trainingDataList = trainingDataListO11    
    
    if dataSet == 181: trainingDataList = trainingDataListP0
    if dataSet == 182: trainingDataList = trainingDataListP1    
    if dataSet == 183: trainingDataList = trainingDataListP2
    if dataSet == 184: trainingDataList = trainingDataListP3
    if dataSet == 185: trainingDataList = trainingDataListP4        
    if dataSet == 186: trainingDataList = trainingDataListP5
    if dataSet == 187: trainingDataList = trainingDataListP6
    if dataSet == 188: trainingDataList = trainingDataListP7   
    if dataSet == 189: trainingDataList = trainingDataListP8 
    if dataSet == 190: trainingDataList = trainingDataListP9
    if dataSet == 191: trainingDataList = trainingDataListP10  
    if dataSet == 192: trainingDataList = trainingDataListP11    
    
    if dataSet == 193: trainingDataList = trainingDataListQ0
    if dataSet == 194: trainingDataList = trainingDataListQ1    
    if dataSet == 195: trainingDataList = trainingDataListQ2
    if dataSet == 196: trainingDataList = trainingDataListQ3
    if dataSet == 197: trainingDataList = trainingDataListQ4        
    if dataSet == 198: trainingDataList = trainingDataListQ5
    if dataSet == 199: trainingDataList = trainingDataListQ6
    if dataSet == 200: trainingDataList = trainingDataListQ7   
    if dataSet == 201: trainingDataList = trainingDataListQ8 
    if dataSet == 202: trainingDataList = trainingDataListQ9
    if dataSet == 203: trainingDataList = trainingDataListQ10  
    if dataSet == 204: trainingDataList = trainingDataListQ11  
    
    if dataSet == 205: trainingDataList = trainingDataListR0
    if dataSet == 206: trainingDataList = trainingDataListR1    
    if dataSet == 207: trainingDataList = trainingDataListR2
    if dataSet == 208: trainingDataList = trainingDataListR3
    if dataSet == 209: trainingDataList = trainingDataListR4        
    if dataSet == 210: trainingDataList = trainingDataListR5
    if dataSet == 211: trainingDataList = trainingDataListR6
    if dataSet == 212: trainingDataList = trainingDataListR7   
    if dataSet == 213: trainingDataList = trainingDataListR8 
    if dataSet == 214: trainingDataList = trainingDataListR9
    if dataSet == 215: trainingDataList = trainingDataListR10  
    if dataSet == 216: trainingDataList = trainingDataListR11 
    
    if dataSet == 217: trainingDataList = trainingDataListS0
    if dataSet == 218: trainingDataList = trainingDataListS1    
    if dataSet == 219: trainingDataList = trainingDataListS2
    if dataSet == 220: trainingDataList = trainingDataListS3
    if dataSet == 221: trainingDataList = trainingDataListS4        
    if dataSet == 222: trainingDataList = trainingDataListS5
    if dataSet == 223: trainingDataList = trainingDataListS6
    if dataSet == 224: trainingDataList = trainingDataListS7   
    if dataSet == 225: trainingDataList = trainingDataListS8 
    if dataSet == 226: trainingDataList = trainingDataListS9
    if dataSet == 227: trainingDataList = trainingDataListS10  
    if dataSet == 228: trainingDataList = trainingDataListS11     
    
    if dataSet == 229: trainingDataList = trainingDataListT0
    if dataSet == 230: trainingDataList = trainingDataListT1    
    if dataSet == 231: trainingDataList = trainingDataListT2
    if dataSet == 232: trainingDataList = trainingDataListT3
    if dataSet == 233: trainingDataList = trainingDataListT4        
    if dataSet == 234: trainingDataList = trainingDataListT5
    if dataSet == 235: trainingDataList = trainingDataListT6
    if dataSet == 236: trainingDataList = trainingDataListT7   
    if dataSet == 237: trainingDataList = trainingDataListT8 
    if dataSet == 238: trainingDataList = trainingDataListT9
    if dataSet == 239: trainingDataList = trainingDataListT10  
    if dataSet == 240: trainingDataList = trainingDataListT11        
    
    if dataSet == 241: trainingDataList = trainingDataListU0
    if dataSet == 242: trainingDataList = trainingDataListU1    
    if dataSet == 243: trainingDataList = trainingDataListU2
    if dataSet == 244: trainingDataList = trainingDataListU3
    if dataSet == 245: trainingDataList = trainingDataListU4        
    if dataSet == 246: trainingDataList = trainingDataListU5
    if dataSet == 247: trainingDataList = trainingDataListU6
    if dataSet == 248: trainingDataList = trainingDataListU7   
    if dataSet == 249: trainingDataList = trainingDataListU8 
    if dataSet == 250: trainingDataList = trainingDataListU9
    if dataSet == 251: trainingDataList = trainingDataListU10  
    if dataSet == 252: trainingDataList = trainingDataListU11            
    
    if dataSet == 253: trainingDataList = trainingDataListV0
    if dataSet == 254: trainingDataList = trainingDataListV1    
    if dataSet == 255: trainingDataList = trainingDataListV2
    if dataSet == 256: trainingDataList = trainingDataListV3
    if dataSet == 257: trainingDataList = trainingDataListV4        
    if dataSet == 258: trainingDataList = trainingDataListV5
    if dataSet == 259: trainingDataList = trainingDataListV6
    if dataSet == 260: trainingDataList = trainingDataListV7   
    if dataSet == 261: trainingDataList = trainingDataListV8 
    if dataSet == 262: trainingDataList = trainingDataListV9
    if dataSet == 263: trainingDataList = trainingDataListV10  
    if dataSet == 264: trainingDataList = trainingDataListV11                 
    
    if dataSet == 265: trainingDataList = trainingDataListW0
    if dataSet == 266: trainingDataList = trainingDataListW1    
    if dataSet == 267: trainingDataList = trainingDataListW2
    if dataSet == 268: trainingDataList = trainingDataListW3
    if dataSet == 269: trainingDataList = trainingDataListW4        
    if dataSet == 270: trainingDataList = trainingDataListW5
    if dataSet == 271: trainingDataList = trainingDataListW6
    if dataSet == 272: trainingDataList = trainingDataListW7   
    if dataSet == 273: trainingDataList = trainingDataListW8 
    if dataSet == 274: trainingDataList = trainingDataListW9
    if dataSet == 275: trainingDataList = trainingDataListW10  
    if dataSet == 276: trainingDataList = trainingDataListW11 
    
    if dataSet == 277: trainingDataList = trainingDataListX0
    if dataSet == 278: trainingDataList = trainingDataListX1    
    if dataSet == 279: trainingDataList = trainingDataListX2
    if dataSet == 280: trainingDataList = trainingDataListX3
    if dataSet == 281: trainingDataList = trainingDataListX4        
    if dataSet == 282: trainingDataList = trainingDataListX5
    if dataSet == 283: trainingDataList = trainingDataListX6
    if dataSet == 284: trainingDataList = trainingDataListX7   
    if dataSet == 285: trainingDataList = trainingDataListX8 
    if dataSet == 286: trainingDataList = trainingDataListX9
    if dataSet == 287: trainingDataList = trainingDataListX10  
    if dataSet == 288: trainingDataList = trainingDataListX11 
    
    if dataSet == 289: trainingDataList = trainingDataListY0
    if dataSet == 290: trainingDataList = trainingDataListY1    
    if dataSet == 291: trainingDataList = trainingDataListY2
    if dataSet == 292: trainingDataList = trainingDataListY3
    if dataSet == 293: trainingDataList = trainingDataListY4        
    if dataSet == 294: trainingDataList = trainingDataListY5
    if dataSet == 295: trainingDataList = trainingDataListY6
    if dataSet == 296: trainingDataList = trainingDataListY7   
    if dataSet == 297: trainingDataList = trainingDataListY8 
    if dataSet == 298: trainingDataList = trainingDataListY9
    if dataSet == 299: trainingDataList = trainingDataListY10  
    if dataSet == 300: trainingDataList = trainingDataListY11 
    
    if dataSet == 301: trainingDataList = trainingDataListZ0
    if dataSet == 302: trainingDataList = trainingDataListZ1    
    if dataSet == 303: trainingDataList = trainingDataListZ2
    if dataSet == 304: trainingDataList = trainingDataListZ3
    if dataSet == 305: trainingDataList = trainingDataListZ4        
    if dataSet == 306: trainingDataList = trainingDataListZ5
    if dataSet == 307: trainingDataList = trainingDataListZ6
    if dataSet == 308: trainingDataList = trainingDataListZ7   
    if dataSet == 309: trainingDataList = trainingDataListZ8 
    if dataSet == 310: trainingDataList = trainingDataListZ9
    if dataSet == 311: trainingDataList = trainingDataListZ10  
    if dataSet == 312: trainingDataList = trainingDataListZ11                                                                                                        
                                   
                                                                                       
    return (trainingDataList)  
           
####################################################################################################
####################################################################################################
#
# Perform a single feedforward pass
#
####################################################################################################
####################################################################################################



####################################################################################################
#
# Function to initialize a specific connection weight with a randomly-generated number between 0 & 1
#
####################################################################################################


def ComputeSingleFeedforwardPassFirstStep (alpha, inputDataList, wWeightArray, biasHiddenWeightArray):
    
# iniitalize the sum of inputs into the hidden array with 0's  
    sumIntoHiddenArray = np.zeros(hiddenArrayLength)    
    hiddenArray = np.zeros(hiddenArrayLength)   

    sumIntoHiddenArray = matrixDotProduct (wWeightArray,inputDataList)
    
    for node in range(hiddenArrayLength):  #  Number of hidden nodes
        hiddenNodeSumInput=sumIntoHiddenArray[node]+biasHiddenWeightArray[node]
        hiddenArray[node] = computeTransferFnctn(hiddenNodeSumInput, alpha)

#    print ' '
#    print 'Back in ComputeSingleFeedforwardPass'
#    print 'The activations for the hidden nodes are:'
#    print '  Hidden0 = %.4f' % hiddenActivation0, 'Hidden1 = %.4f' % hiddenActivation1

                                                                                                    
    return (hiddenArray);
  


####################################################################################################
#
# Function to compute the output node activations, given the hidden node activations, the hidden-to
#   output connection weights, and the output bias weights.
# Function returns the array of output node activations.
#
####################################################################################################

def ComputeSingleFeedforwardPassSecondStep (alpha, hiddenArray, vWeightArray, biasOutputWeightArray):
    
# initialize the sum of inputs into the hidden array with 0's  
    sumIntoOutputArray = np.zeros(hiddenArrayLength)    
    outputArray = np.zeros(outputArrayLength)   

    sumIntoOutputArray = matrixDotProduct (vWeightArray,hiddenArray)
    
    for node in range(outputArrayLength):  #  Number of hidden nodes
        outputNodeSumInput=sumIntoOutputArray[node]+biasOutputWeightArray[node]
        outputArray[node] = computeTransferFnctn(outputNodeSumInput, alpha)
                                                                                                   
    return (outputArray);
  


####################################################################################################
#
# Procedure to compute the output node activations and determine errors across the entire training
#  data set, and print results.
#
####################################################################################################

def ComputeOutputsAcrossAllTrainingData (alpha, gamma, numTrainingDataSets, wWeightArray, 
biasHiddenWeightArray, vWeightArray, biasOutputWeightArray):

    selectedTrainingDataSet = 1                              
    newTotalSSE = 0.0                  

    while selectedTrainingDataSet < numTrainingDataSets + 1: 
        print ' '
        print ' the selected Training Data Set is ', selectedTrainingDataSet
        trainingDataList = obtainSelectedAlphabetTrainingValues (selectedTrainingDataSet)
# Note: the trainingDataList is a list comprising several values:
#    - the 0th is the list number 
#    - the 1st is the actual list of the input training values
#    - etc. 

        trainingDataInputList = trainingDataList[1]   
   
        
        inputDataList = [] 
        for node in range(inputArrayLength):

            trainingData = trainingDataInputList[node]    
                
            inputDataList.append(trainingData)

        letterNum = trainingDataList[2]
        letterChar = trainingDataList[3]  

        
        print ' '
        print '  Data Set Number', selectedTrainingDataSet, ' for letter ', letterChar, ' with letter number ', letterNum 
#        print ' Last Random Value', trainingDataSetNoise
        
#        printLetter(inputDataList)


        hiddenArray = ComputeSingleFeedforwardPassFirstStep (alpha, inputDataList, wWeightArray, biasHiddenWeightArray)

#        print ' '
#        print ' The hidden node activations are:'
#        print hiddenArray

        outputArray = ComputeSingleFeedforwardPassSecondStep (alpha, hiddenArray, vWeightArray, biasOutputWeightArray)
    
        print ' '
        print ' The output node activations are:', outputArray
        

        desiredOutputArray = np.zeros(outputArrayLength)    # iniitalize the output array with 0's
        desiredClass = trainingDataList[4]                 # identify the desired class
        desiredOutputArray[desiredClass] = 1                # set the desired output for that class to 1
     
        print ' '
        print ' The desired output array values are: ',desiredOutputArray 
 
       
                        
# Determine the error between actual and desired outputs

# Initialize the error array
        errorArray = np.zeros(outputArrayLength) 
    
        newSSE = 0.0
        for node in range(outputArrayLength):  #  Number of nodes in output set (classes)
            errorArray[node] = desiredOutputArray[node] - outputArray[node]
            newSSE = newSSE + errorArray[node]*errorArray[node]        
            
        newTotalSSE += newSSE

        print ' '
        print ' The error values are: ',errorArray   
        print 'the Max error is:', max(abs(errorArray))

        
# Print the Summed Squared Error  
        print 'New SSE = %.6f' % newSSE 
        print 'New Total SSE = %.6f' % newTotalSSE 
        
        selectedTrainingDataSet = selectedTrainingDataSet +1 
        

                        


####################################################################################################
#**************************************************************************************************#
####################################################################################################
#
#   Backpropagation Section
#
####################################################################################################
#**************************************************************************************************#
####################################################################################################

   
            
####################################################################################################
####################################################################################################
#
# Backpropagate weight changes onto the hidden-to-output connection weights
#
####################################################################################################
####################################################################################################


def backpropagateOutputToHidden (alpha, eta, arraySizeList, errorArray, outputArray, hiddenArray, vWeightArray):

# The first step here applies a backpropagation-based weight change to the hidden-to-output wts v. 
# Core equation for the first part of backpropagation: 
# d(SSE)/dv(h,o) = -alpha*Error*F(1-F)*Hidden(h)
# where:
# -- SSE = sum of squared errors, and only the error associated with a given output node counts
# -- v(h,o) is the connection weight v between the hidden node h and the output node o
# -- alpha is the scaling term within the transfer function, often set to 1
# ---- (this is included in transfFuncDeriv) 
# -- Error = Error(o) or error at the output node o; = Desired(o) - Actual(o)
# -- F = transfer function, here using the sigmoid transfer function
# -- Hidden(h) = the output of hidden node h. 

# We will DECREMENT the connection weight v by a small amount proportional to the derivative eqn
#   of the SSE w/r/t the weight v. 
# This means, since there is a minus sign in that derivative, that we will add a small amount. 
# (Decrementing is -, applied to a (-), which yields a positive.)

# For the actual derivation of this equation with MATCHING VARIABLE NAMES (easy to understand), 
#   please consult: Brain-Based Computing, by AJ Maren (under development, Jan., 2017). Chpt. X. 
#   (Meaning: exact chapter is still TBD.) 
# For the latest updates, etc., please visit: www.aliannajmaren.com


# Unpack array lengths
    hiddenArrayLength = arraySizeList [1]
    outputArrayLength = arraySizeList [2]

    transferFuncDerivArray = np.zeros(outputArrayLength)    # iniitalize an array for the transfer function
      
    for node in range(outputArrayLength):  #  Number of hidden nodes
        transferFuncDerivArray[node]=computeTransferFnctnDeriv(outputArray[node], alpha)
 


# Note: the parameter 'alpha' in the transfer function shows up in the transfer function derivative
#   and so is not included explicitly in the equations for the deltas in the connection weights    
#    print ' '
#    print ' The transfer function derivative is: '
#    print transferFuncDerivArray
                        
    deltaVWtArray = np.zeros((outputArrayLength, hiddenArrayLength))  # initialize an array for the deltas
    newVWeightArray = np.zeros((outputArrayLength, hiddenArrayLength)) # initialize an array for the new hidden weights
        
    for row in range(outputArrayLength):  #  Number of rows in weightMatrix
        # For an input-to-hidden weight matrix, the rows correspond to the number of hidden nodes,
        #    and the columns correspond to the number of input nodes.
        #    This creates an HxI matrix, which can be multiplied by the input node array (expressed as a column).
        # Similarly, for a hidden-to-output matrix, the rows correspond to the number of output nodes,
        #    and the columns correspond to the number of hidden nodes,
        #    which can be multiplied by the hidden node array (expressed as a column).
        for col in range(hiddenArrayLength):  # number of columns in weightMatrix
            partialSSE_w_V_Wt = -errorArray[row]*transferFuncDerivArray[row]*hiddenArray[col]
            deltaVWtArray[row,col] = -eta*partialSSE_w_V_Wt
            newVWeightArray[row,col] = vWeightArray[row,col] + deltaVWtArray[row,col]                                                                                     

#    print ' '
#    print ' The previous hidden-to-output connection weights are: '
#    print vWeightArray
#    print ' '
#    print ' The new hidden-to-output connection weights are: '
#    print newVWeightArray

#    PrintAndTraceBackpropagateOutputToHidden (alpha, nu, errorList, actualAllNodesOutputList, 
#    transFuncDerivList, deltaVWtArray, vWeightArray, newHiddenWeightArray)    
                                                                  
                                                                                                                                                                                                            
    return (newVWeightArray);     

            
####################################################################################################
####################################################################################################
#
# Backpropagate weight changes onto the bias-to-output connection weights
#
####################################################################################################
####################################################################################################


def backpropagateBiasOutputWeights (alpha, eta, arraySizeList, errorArray, outputArray, biasOutputWeightArray):

# The first step here applies a backpropagation-based weight change to the hidden-to-output wts v. 
# Core equation for the first part of backpropagation: 
# d(SSE)/dv(h,o) = -alpha*Error*F(1-F)*Hidden(h)
# where:
# -- SSE = sum of squared errors, and only the error associated with a given output node counts
# -- v(h,o) is the connection weight v between the hidden node h and the output node o
# -- alpha is the scaling term within the transfer function, often set to 1
# ---- (this is included in transfFuncDeriv) 
# -- Error = Error(o) or error at the output node o; = Desired(o) - Actual(o)
# -- F = transfer function, here using the sigmoid transfer function
# -- Hidden(h) = the output of hidden node h. 

# Note that the training rate parameter is assigned in main; Greek letter "eta," looks like n, 
#   scales amount of change to connection weight

# We will DECREMENT the connection weight biasOutput by a small amount proportional to the derivative eqn
#   of the SSE w/r/t the weight biasOutput(o). 
# This means, since there is a minus sign in that derivative, that we will add a small amount. 
# (Decrementing is -, applied to a (-), which yields a positive.)

# For the actual derivation of this equation with MATCHING VARIABLE NAMES (easy to understand), 
#   please consult: Brain-Based Computing, by AJ Maren (under development, Jan., 2017). Chpt. X. 
#   (Meaning: exact chapter is still TBD.) 
# For the latest updates, etc., please visit: www.aliannajmaren.com


# Note: the parameter 'alpha' in the transfer function shows up in the transfer function derivative
#   and so is not included explicitly in these equations 

# The equation for the actual dependence of the Summed Squared Error on a given bias-to-output 
#   weight biasOutput(o) is:
#   partial(SSE)/partial(biasOutput(o)) = -alpha*E(o)*F(o)*[1-F(o)]*1, as '1' is the input from the bias.
# The transfer function derivative (transFuncDeriv) returned from computeTransferFnctnDeriv is given as:
#   transFuncDeriv =  alpha*NeuronOutput*(1.0 -NeuronOutput), as with the hidden-to-output weights.
# Therefore, we can write the equation for the partial(SSE)/partial(biasOutput(o)) as
#   partial(SSE)/partial(biasOutput(o)) = E(o)*transFuncDeriv
#   The parameter alpha is included in transFuncDeriv


# Unpack the output array length
    outputArrayLength = arraySizeList [2]

    deltaBiasOutputArray = np.zeros(outputArrayLength)  # initialize an array for the deltas
    newBiasOutputWeightArray = np.zeros(outputArrayLength) # initialize an array for the new output bias weights
    transferFuncDerivArray = np.zeros(outputArrayLength)    # iniitalize an array for the transfer function
      
    for node in range(outputArrayLength):  #  Number of hidden nodes
        transferFuncDerivArray[node]=computeTransferFnctnDeriv(outputArray[node], alpha)
 

    for node in range(outputArrayLength):  #  Number of nodes in output array (same as number of output bias nodes)    
        partialSSE_w_BiasOutput = -errorArray[node]*transferFuncDerivArray[node]
        deltaBiasOutputArray[node] = -eta*partialSSE_w_BiasOutput  
        newBiasOutputWeightArray[node] =  biasOutputWeightArray[node] + deltaBiasOutputArray[node]           
   
#    print ' '
#    print ' The previous biases for the output nodes are: '
#    print biasOutputWeightArray
#    print ' '
#    print ' The new biases for the output nodes are: '
#    print newBiasOutputWeightArray
                                                                                                                                                
    return (newBiasOutputWeightArray);     


####################################################################################################
####################################################################################################
#
# Backpropagate weight changes onto the input-to-hidden connection weights
#
####################################################################################################
####################################################################################################


def backpropagateHiddenToInput (alpha, eta, arraySizeList, errorArray, outputArray, hiddenArray,
    inputArray, vWeightArray, wWeightArray, biasHiddenWeightArray, biasOutputWeightArray):

# The first step here applies a backpropagation-based weight change to the input-to-hidden wts w. 
# Core equation for the second part of backpropagation: 
# d(SSE)/dw(i,h) = -eta*alpha*F(h)(1-F(h))*Input(i)*sum(v(h,o)*Error(o))
# where:
# -- SSE = sum of squared errors, and only the error associated with a given output node counts
# -- w(i,h) is the connection weight w between the input node i and the hidden node h
# -- v(h,o) is the connection weight v between the hidden node h and the output node o
# -- alpha is the scaling term within the transfer function, often set to 1 
# ---- (this is included in transfFuncDeriv) 
# -- Error = Error(o) or error at the output node o; = Desired(o) - Actual(o)
# -- F = transfer function, here using the sigmoid transfer function
# ---- NOTE: in this second step, the transfer function is applied to the output of the hidden node,
# ------ so that F = F(h)
# -- Hidden(h) = the output of hidden node h (used in computing the derivative of the transfer function). 
# -- Input(i) = the input at node i.

# Note that the training rate parameter is assigned in main; Greek letter "eta," looks like n, 
#   scales amount of change to connection weight

# Unpack the errorList and the vWeightArray

# We will DECREMENT the connection weight v by a small amount proportional to the derivative eqn
#   of the SSE w/r/t the weight w. 
# This means, since there is a minus sign in that derivative, that we will add a small amount. 
# (Decrementing is -, applied to a (-), which yields a positive.)

# For the actual derivation of this equation with MATCHING VARIABLE NAMES (easy to understand), 
#   please consult: Brain-Based Computing, by AJ Maren (under development, Jan., 2017). Chpt. X. 
#   (Meaning: exact chapter is still TBD.) 
# For the latest updates, etc., please visit: www.aliannajmaren.com

# Note that the training rate parameter is assigned in main; Greek letter "eta," looks like n, 
#   scales amount of change to connection weight
 
# For the second step in backpropagation (computing deltas on the input-to-hidden weights)
#   we need the transfer function derivative is applied to the output at the hidden node        

# Unpack array lengths
    inputArrayLength = arraySizeList [0]
    hiddenArrayLength = arraySizeList [1]
    outputArrayLength = arraySizeList [2]              
                                          
# Note: the parameter 'alpha' in the transfer function shows up in the transfer function derivative
#   and so is not included explicitly in these equations       
    transferFuncDerivHiddenArray = np.zeros(hiddenArrayLength)    # initialize an array for the transfer function deriv 
      
    for node in range(hiddenArrayLength):  #  Number of hidden nodes
        transferFuncDerivHiddenArray[node]=computeTransferFnctnDeriv(hiddenArray[node], alpha)
        
    errorTimesTFuncDerivOutputArray = np.zeros(outputArrayLength) # initialize array
    transferFuncDerivOutputArray    = np.zeros(outputArrayLength) # initialize array
    weightedErrorArray              = np.zeros(hiddenArrayLength) # initialize array
      
    for outputNode in range(outputArrayLength):  #  Number of output nodes
        transferFuncDerivOutputArray[outputNode]=computeTransferFnctnDeriv(outputArray[outputNode], alpha)
        errorTimesTFuncDerivOutputArray[outputNode] = errorArray[outputNode]*transferFuncDerivOutputArray[outputNode]
        
    for hiddenNode in range(hiddenArrayLength):
        weightedErrorArray[hiddenNode] = 0
        for outputNode in range(outputArrayLength):  #  Number of output nodes    
            weightedErrorArray[hiddenNode] = weightedErrorArray[hiddenNode] \
            + vWeightArray[outputNode, hiddenNode]*errorTimesTFuncDerivOutputArray[outputNode]
             
    deltaWWtArray = np.zeros((hiddenArrayLength, inputArrayLength))  # initialize an array for the deltas
    newWWeightArray = np.zeros((hiddenArrayLength, inputArrayLength)) # initialize an array for the new input-to-hidden weights
        
    for row in range(hiddenArrayLength):  #  Number of rows in input-to-hidden weightMatrix
        # For an input-to-hidden weight matrix, the rows correspond to the number of hidden nodes,
        #    and the columns correspond to the number of input nodes.
        #    This creates an HxI matrix, which can be multiplied by the input node array (expressed as a column).

        for col in range(inputArrayLength):  # number of columns in weightMatrix
            partialSSE_w_W_Wts = -transferFuncDerivHiddenArray[row]*inputArray[col]*weightedErrorArray[row]
            deltaWWtArray[row,col] = -eta*partialSSE_w_W_Wts
            newWWeightArray[row,col] = wWeightArray[row,col] + deltaWWtArray[row,col]                                                                                     

#    print ' '
#    print ' The previous hidden-to-output connection weights are: '
#    print wWeightArray
#    print ' '
#    print ' The new hidden-to-output connection weights are: '
#    print newWWeightArray    
       
                                                                    
    return (newWWeightArray);     
    
            
####################################################################################################
####################################################################################################
#
# Backpropagate weight changes onto the bias-to-hidden connection weights
#
####################################################################################################
####################################################################################################


def backpropagateBiasHiddenWeights (alpha, eta, arraySizeList, errorArray, outputArray, hiddenArray,
    inputArray, vWeightArray, wWeightArray, biasHiddenWeightArray, biasOutputWeightArray):

# The first step here applies a backpropagation-based weight change to the hidden-to-output wts v. 
# Core equation for the first part of backpropagation: 
# d(SSE)/dv(h,o) = -alpha*Error*F(1-F)*Hidden(h)
# where:
# -- SSE = sum of squared errors, and only the error associated with a given output node counts
# -- v(h,o) is the connection weight v between the hidden node h and the output node o
# -- alpha is the scaling term within the transfer function, often set to 1
# ---- (this is included in transfFuncDeriv) 
# -- Error = Error(o) or error at the output node o; = Desired(o) - Actual(o)
# -- F = transfer function, here using the sigmoid transfer function
# -- Hidden(h) = the output of hidden node h. 

# Note that the training rate parameter is assigned in main; Greek letter "eta," looks like n, 
#   scales amount of change to connection weight

# We will DECREMENT the connection weight biasOutput by a small amount proportional to the derivative eqn
#   of the SSE w/r/t the weight biasOutput(o). 
# This means, since there is a minus sign in that derivative, that we will add a small amount. 
# (Decrementing is -, applied to a (-), which yields a positive.)

# For the actual derivation of this equation with MATCHING VARIABLE NAMES (easy to understand), 
#   please consult: Brain-Based Computing, by AJ Maren (under development, Jan., 2017). Chpt. X. 
#   (Meaning: exact chapter is still TBD.) 
# For the latest updates, etc., please visit: www.aliannajmaren.com


# Unpack array lengths
    inputArrayLength = arraySizeList [0]
    hiddenArrayLength = arraySizeList [1]
    outputArrayLength = arraySizeList [2]              
                                          
   
# Compute the transfer function derivatives as a function of the output nodes.
# Note: As this is being done after the call to the backpropagation on the hidden-to-output weights,
#   the transfer function derivative computed there could have been used here; the calculations are
#   being redone here only to maintain module independence              

    errorTimesTFuncDerivOutputArray = np.zeros(outputArrayLength) # initialize array    
    transferFuncDerivOutputArray    = np.zeros(outputArrayLength) # initialize array
    weightedErrorArray              = np.zeros(hiddenArrayLength) # initialize array    

    transferFuncDerivHiddenArray = np.zeros(hiddenArrayLength)  # initialize an array for the transfer function deriv 
    partialSSE_w_BiasHidden      = np.zeros(hiddenArrayLength)  # initialize an array for the partial derivative of the SSE
    deltaBiasHiddenArray         = np.zeros(hiddenArrayLength)  # initialize an array for the deltas
    newBiasHiddenWeightArray     = np.zeros(hiddenArrayLength)  # initialize an array for the new hidden bias weights
          
    for node in range(hiddenArrayLength):  #  Number of hidden nodes
        transferFuncDerivHiddenArray[node]=computeTransferFnctnDeriv(hiddenArray[node], alpha)      
                  
    for outputNode in range(outputArrayLength):  #  Number of output nodes
        transferFuncDerivOutputArray[outputNode]=computeTransferFnctnDeriv(outputArray[outputNode], alpha) 
        errorTimesTFuncDerivOutputArray[outputNode] = errorArray[outputNode]*transferFuncDerivOutputArray[outputNode]

    for hiddenNode in range(hiddenArrayLength):
        weightedErrorArray[hiddenNode] = 0
        for outputNode in range(outputArrayLength):  #  Number of output nodes    
            weightedErrorArray[hiddenNode] = weightedErrorArray[hiddenNode]
            + vWeightArray[outputNode, hiddenNode]*errorTimesTFuncDerivOutputArray[outputNode]
            
# Note: the parameter 'alpha' in the transfer function shows up in the transfer function derivative
#   and so is not included explicitly in these equations 


# ===>>> AJM needs to double-check these equations in the comments area
# ===>>> The code should be fine. 
# The equation for the actual dependence of the Summed Squared Error on a given bias-to-output 
#   weight biasOutput(o) is:
#   partial(SSE)/partial(biasOutput(o)) = -alpha*E(o)*F(o)*[1-F(o)]*1, as '1' is the input from the bias.
# The transfer function derivative (transFuncDeriv) returned from computeTransferFnctnDeriv is given as:
#   transFuncDeriv =  alpha*NeuronOutput*(1.0 -NeuronOutput), as with the hidden-to-output weights.
# Therefore, we can write the equation for the partial(SSE)/partial(biasOutput(o)) as
#   partial(SSE)/partial(biasOutput(o)) = E(o)*transFuncDeriv
#   The parameter alpha is included in transFuncDeriv

    for hiddenNode in range(hiddenArrayLength):  #  Number of rows in input-to-hidden weightMatrix           
        partialSSE_w_BiasHidden[hiddenNode] = -transferFuncDerivHiddenArray[hiddenNode]*weightedErrorArray[hiddenNode]
        deltaBiasHiddenArray[hiddenNode] = -eta*partialSSE_w_BiasHidden[hiddenNode]
        newBiasHiddenWeightArray[hiddenNode] = biasHiddenWeightArray[hiddenNode] + deltaBiasHiddenArray[hiddenNode]                                                                                                                                                                                                                                                         
  
                                                                                                                                            
    return (newBiasHiddenWeightArray); 



####################################################################################################
####################################################################################################
#
# Procedure to print out a letter, given the number of the letter code
#
####################################################################################################
####################################################################################################

def printLetter (inputDataList):    

#    print ' '
#    print ' in procedure printLetter'
#    print ' '                         
##    print 'The training data set is ', trainingDataList[0]
#    print 'The data set is for the letter', trainingDataList[3], ', which is alphabet number ', trainingDataList[2]

#    if trainingDataList[0] > 25: print 'This is a variant pattern for letter ', trainingDataList[3] 

#    pixelArray = trainingDataList[1]
                
    iterAcrossRow = 0
    iterOverAllRows = 0
    while iterOverAllRows <11:
        while iterAcrossRow < 11:
            arrayElement = inputDataList[iterAcrossRow+iterOverAllRows*11]
            if arrayElement <0.9: printElement = ' '
            else: printElement = 'X'
            print printElement, 
            iterAcrossRow = iterAcrossRow+1
        print ' '
        iterOverAllRows = iterOverAllRows + 1
        iterAcrossRow = 0 #re-initialize so the row-print can begin again
    
    return         


####################################################################################################
#**************************************************************************************************#
####################################################################################################    
        
            
                    
            
####################################################################################################
#**************************************************************************************************#
####################################################################################################
#
# The MAIN module comprising of calls to:
#   (1) Welcome
#   (2) Obtain neural network size specifications for a three-layer network consisting of:
#       - Input layer
#       - Hidden layer
#       - Output layer (all the sizes are currently hard-coded to two nodes per layer right now)
#   (3) Initialize connection weight values
#       - w: Input-to-Hidden nodes
#       - v: Hidden-to-Output nodes
#   (4) Compute a feedforward pass in two steps
#       - Randomly select a single training data set
#       - Input-to-Hidden
#       - Hidden-to-Output
#       - Compute the error array
#       - Compute the new Summed Squared Error (SSE)
#   (5) Perform a single backpropagation training pass
#
####################################################################################################
#**************************************************************************************************#
####################################################################################################


def main():

# Define the global variables        
    global inputArrayLength
    global hiddenArrayLength
    global outputArrayLength
    global gridWidth
    global gridHeight
    global eGH # expandedGridHeight, defined in function expandLetterBoundaries 
    global eGW # expandedGridWidth defined in function expandLetterBoundaries 
    global mask1    

####################################################################################################
# Obtain unit array size in terms of array_length (M) and layers (N)
####################################################################################################                

# This calls the procedure 'welcome,' which just prints out a welcoming message. 
# All procedures need an argument list. 
# This procedure has a list, but it is an empty list; welcome().

    welcome()

    
# Right now, for simplicity, we're going to hard-code the numbers of layers that we have in our 
#   multilayer Perceptron (MLP) neural network. 
# We will have an input layer (I), an output layer (O), and a single hidden layer (H). 

# Define the variable arraySizeList, which is a list. It is initially an empty list. 
# Its purpose is to store the size of the array.

    arraySizeList = list() # empty list

# Obtain the actual sizes for each layer of the network       
    arraySizeList = obtainNeuralNetworkSizeSpecs ()
    
# Unpack the list; ascribe the various elements of the list to the sizes of different network layers
# Note: A word on Python encoding ... the actually length of the array, in each of these three cases, 
#       will be xArrayLength. For example, the inputArrayLength for the 9x9 pixel array is 81. 
#       These values are passed to various procedures. They start filling in actual array values,
#       where the array values start their count at element 0. However, when filling them in using a
#       "for node in range[limit]" statement, the "for" loop fills from 0 up to limit-1. Thus, the
#       original xArrayLength size is preserved.   
    inputArrayLength = arraySizeList [0] 
    hiddenArrayLength = arraySizeList [1] 
    outputArrayLength = arraySizeList [2] 
    
    print ' '
    print ' inputArrayLength = ', inputArrayLength
    print ' hiddenArrayLength = ', hiddenArrayLength
    print ' outputArrayLength = ', outputArrayLength        


# Parameter definitions for backpropagation, to be replaced with user inputs
    alpha = 1.0
    eta = 0.5    
    maxNumIterations = 100000    # temporarily set to 10 for testing
    epsilon = 0.0
    iteration = 0
    SSE = 0.0
    gamma = 0.0
    numTrainingDataSets = 312

                           

####################################################################################################
# Initialize the weight arrays for two sets of weights; w: input-to-hidden, and v: hidden-to-output
####################################################################################################                

#
# The wWeightArray is for Input-to-Hidden
# The vWeightArray is for Hidden-to-Output

    wWeightArraySizeList = (inputArrayLength, hiddenArrayLength)
    vWeightArraySizeList = (hiddenArrayLength, outputArrayLength)
    biasHiddenWeightArraySize = hiddenArrayLength
    biasOutputWeightArraySize = outputArrayLength        

# The node-to-node connection weights are stored in a 2-D array
#    print ' '
#    print ' about to call initializeWeightArray for the w weights'
#    print ' the number of lower and upper nodes is ', wWeightArraySizeList 
    wWeightArray = initializeWeightArray (wWeightArraySizeList)
#    print ' about to call initializeWeightArray for the v weights'
#    print ' the number of lower and upper nodes is ', vWeightArraySizeList     
    vWeightArray = initializeWeightArray (vWeightArraySizeList)

# The bias weights are stored in a 1-D array         
    biasHiddenWeightArray = initializeBiasWeightArray (biasHiddenWeightArraySize)
    biasOutputWeightArray = initializeBiasWeightArray (biasOutputWeightArraySize) 

    
          
####################################################################################################
# Starting the backpropagation work
####################################################################################################     



# Notice in the very beginning of the program, we have 
#   np.set_printoptions(precision=4) (sets number of dec. places in print)
#     and 'np.set_printoptions(suppress=True)', which keeps it from printing in scientific format
#   Debug print: 
#    print
#    print 'The initial weights for this neural network are:'
#    print '       Input-to-Hidden '
#    print wWeightArray
#    print '       Hidden-to-Output'
#    print vWeightArray
#    print ' '
#    print 'The initial bias weights for this neural network are:'
#    print '        Hidden Bias = ', biasHiddenWeightArray                         
#    print '        Output Bias = ', biasOutputWeightArray
  

          
####################################################################################################
# Before we start training, get a baseline set of outputs, errors, and SSE 
####################################################################################################                
                            
    print ' '
    print '  Before training:'
    
    ComputeOutputsAcrossAllTrainingData (alpha, gamma, numTrainingDataSets, wWeightArray, 
biasHiddenWeightArray, vWeightArray, biasOutputWeightArray)                           
                                             
          
####################################################################################################
# Next step - Obtain a single set of randomly-selected training values for alpha-classification 
####################################################################################################                
  
  
    while iteration < maxNumIterations:           

# Increment the iteration count
        iteration = iteration +1

####################################################################################################
# While training - STEP 1: Obtain a set of training data; inputs and desired outputs
####################################################################################################     
            
# For any given pass, we re-initialize the training list
        trainingDataList = (
        0,0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0,0, 
        0,0,0,0,0,0,0,0,0,0,0, 
        0, ' ')                                 
                                                                                          
# Randomly select one of four training sets; the inputs will be randomly assigned to 0 or 1
        dataSet = random.randint(1, numTrainingDataSets)
        
# Optional print / debug:
#        print ' '
#        print ' in main; the dataSet selected is ', dataSet        

# We return the list from the function, with values placed inside the list.           
#        print ' in main, about to call obtainSelected'
        trainingDataList = obtainSelectedAlphabetTrainingValues (dataSet)  
#        print ' in main; the trainingDataList number is ', trainingDataList[0]
                
# Optional print/debug
#        printLetter(trainingDataList)        
          
                                                                                                                                                    
####################################################################################################
# While training - STEP 2: Create an input array based on the input training data list
####################################################################################################     

        inputDataList = []  
        inputDataArray =  np.zeros(inputArrayLength)
        
# The trainning inputs are drawn from the first element (starting count at 0) in the training data list

        thisTrainingDataList = list()                                                                            
        thisTrainingDataList = trainingDataList[1]
        for node in range(inputArrayLength): 
            
            trainingDataSetNoise=0                     # Initialize random noise variable
            trainingDataSetNoise = np.random.random()  # Assign a random value to the noise variable
            if trainingDataSetNoise < gamma:             # Determine if pixel should be changed using gamma
                
                if thisTrainingDataList[node] == 0:   #  Determine if input pixe is a 0
                    trainingData = 1                   # If input pixel is 0 change to 1
                else: 
                    trainingData = 0                   # If input pixe is 1 change to 0
            else:
                trainingData = thisTrainingDataList[node]    # Keep input pixel if greater than gamma
            
            
            inputDataList.append(trainingData)
            inputDataArray[node] = trainingData
            
#        print ' '
#        print ' Debug print on getting the inputDataList and inputDataArray'
#        print '   inputDataList: '
#        print inputDataList
#        print ' ' 
#        print '   inputDataArray'
#        print inputDataArray
        
        
# The desired outputs are drawn from the fourth element (starting count at 0) in the training data list
#   This represents the "big shape class" which we are training towards in GB1

        desiredOutputArray = np.zeros(outputArrayLength)    # iniitalize the output array with 0's
        desiredClass = trainingDataList[4]                 # identify the desired class
        desiredOutputArray[desiredClass] = 1                # set the desired output for that class to 1

                 
          
####################################################################################################
# Compute a single feed-forward pass and obtain the Actual Outputs
####################################################################################################                
                
                           
        hiddenArray = ComputeSingleFeedforwardPassFirstStep (alpha, inputDataArray, wWeightArray, biasHiddenWeightArray)
    
#        print ' '
#        print ' The hidden node activations are:'
#        print hiddenArray

        outputArray = ComputeSingleFeedforwardPassSecondStep (alpha, hiddenArray,vWeightArray, biasOutputWeightArray)
    
#        print ' '
#        print ' The output node activations are:'
 #       print outputArray    

#  Optional alternative code for later use:
#  Assign the hidden and output values to specific different variables
#    for node in range(hiddenArrayLength):    
#        actualHiddenOutput[node] = actualAllNodesOutputList [node]
    
#    for node in range(outputArrayLength):    
#        actualOutput[node] = actualAllNodesOutputList [hiddenArrayLength + node]
 
# Initialize the error array
        errorArray = np.zeros(outputArrayLength) 
    
# Determine the error between actual and desired outputs        
        newSSE = 0.0
        for node in range(outputArrayLength):  #  Number of nodes in output set (classes)
            errorArray[node] = desiredOutputArray[node] - outputArray[node]
            newSSE = newSSE + errorArray[node]*errorArray[node]        

#        print ' '
#        print ' The error values are:'
#        print errorArray   
        
# Print the Summed Squared Error  
#        print 'Initial SSE = %.6f' % newSSE
#        SSE = newSSE

         
          
####################################################################################################
# Perform backpropagation
####################################################################################################                
                

# Perform first part of the backpropagation of weight changes    
        newVWeightArray = backpropagateOutputToHidden (alpha, eta, arraySizeList, errorArray, outputArray, hiddenArray, vWeightArray)
        newBiasOutputWeightArray = backpropagateBiasOutputWeights (alpha, eta, arraySizeList, errorArray, outputArray, biasOutputWeightArray) 

# Perform first part of the backpropagation of weight changes       
        newWWeightArray = backpropagateHiddenToInput (alpha, eta, arraySizeList, errorArray, outputArray, hiddenArray,
        inputDataList, vWeightArray, wWeightArray, biasHiddenWeightArray, biasOutputWeightArray)

        newBiasHiddenWeightArray = backpropagateBiasHiddenWeights (alpha, eta, arraySizeList, errorArray, outputArray, hiddenArray,
        inputDataList, vWeightArray, wWeightArray, biasHiddenWeightArray, biasOutputWeightArray)  
    
                    
# Assign new values to the weight matrices
# Assign the old hidden-to-output weight array to be the same as what was returned from the BP weight update
        vWeightArray = newVWeightArray[:]
    
        biasOutputWeightArray = newBiasOutputWeightArray[:]
    
# Assign the old input-to-hidden weight array to be the same as what was returned from the BP weight update
        wWeightArray = newWWeightArray[:]  
    
        biasHiddenWeightArray = newBiasHiddenWeightArray[:] 
    
# Compute a forward pass, test the new SSE                                                                                
                                                                                                                                    
        hiddenArray = ComputeSingleFeedforwardPassFirstStep (alpha, inputDataList, wWeightArray, biasHiddenWeightArray)
    
#    print ' '
#    print ' The hidden node activations are:'
#    print hiddenArray

        outputArray = ComputeSingleFeedforwardPassSecondStep (alpha, hiddenArray, vWeightArray, biasOutputWeightArray)
    
#    print ' '
#    print ' The output node activations are:'
#    print outputArray    

    
# Determine the error between actual and desired outputs

        newSSE = 0.0
        for node in range(outputArrayLength):  #  Number of nodes in output set (classes)
            errorArray[node] = desiredOutputArray[node] - outputArray[node]
            newSSE = newSSE + errorArray[node]*errorArray[node]        

#        print ' '
#        print ' The error values are:'
#        print errorArray   
        
# Print the Summed Squared Error  
#        print 'Previous SSE = %.6f' % SSE
#        print 'New SSE = %.6f' % newSSE 
    
#        print ' '
#        print 'Iteration number ', iteration
#        iteration = iteration + 1

        if newSSE < epsilon:

            
            break
    print 'Out of while loop at iteration ', iteration 
    
####################################################################################################
# After training, get a new comparative set of outputs, errors, and SSE 
####################################################################################################                           

    print ' '
    print '  After training:'                  
                                                      
    ComputeOutputsAcrossAllTrainingData (alpha, gamma, numTrainingDataSets, wWeightArray, 
biasHiddenWeightArray, vWeightArray, biasOutputWeightArray) 


####################################################################################################
# After computing final SSEs, etc., store all the weights to files (four different files)
####################################################################################################    

# Create lists of the connection weights; one for the input-to-hidden, another for the hidden-to-output
    wWeightList = list()
    numUpperNodes = hiddenArrayLength 
    numLowerNodes = inputArrayLength
    for row in range(numUpperNodes):  #  Number of rows in weightMatrix
        # For an input-to-hidden weight matrix, the rows correspond to the number of hidden nodes
        #    and the columns correspond to the number of input nodes.
        #    This creates an HxI matrix, which can be multiplied by the input matrix (expressed as a column)
        # Similarly, for a hidden-to-output matrix, the rows correspond to the number of output nodes.
        for col in range(numLowerNodes):  # number of columns in matrix 2
            localWeight = wWeightArray[row,col] 
            wWeightList.append(localWeight)    

#    print wWeightList

# Write the input-to-hidden connection weights to a file

    wWeightFile = open('C:\Users\chauh\Documents\Susan Data\GB1wWeightFile', 'w') 

    for item in wWeightList:
        wWeightFile.write("%s\n" % item)  
    wWeightFile.close()
     
# do the same for the hidden to output weights
 
    vWeightList = list()
    numUpperNodes = outputArrayLength
    numLowerNodes = hiddenArrayLength
    for row in range(numUpperNodes):  #  Number of rows in weightMatrix
        # For an input-to-hidden weight matrix, the rows correspond to the number of hidden nodes
        #    and the columns correspond to the number of input nodes.
        #    This creates an HxI matrix, which can be multiplied by the input matrix (expressed as a column)
        # Similarly, for a hidden-to-output matrix, the rows correspond to the number of output nodes.
        for col in range(numLowerNodes):  # number of columns in matrix 2
            localWeight = vWeightArray[row,col] 
            vWeightList.append(localWeight)    

#    print vWeightList

# Write the hidden-to-output connection weights to a file

    vWeightFile = open('C:\Users\chauh\Documents\Susan Data\GB1vWeightFile', 'w') 

    for item in vWeightList:
        vWeightFile.write("%s\n" % item)  
 
    vWeightFile.close() 

# Do the same thing for the two sets of bias weights    
        
# Start with the hidden node bias weights
    
# Create a list storing the array values for the hidden node bias weights
    wBiasWeightList = list()
    for node in range(hiddenArrayLength):  #  Number of hidden bias nodes
        localBiasWeight = biasHiddenWeightArray[node] 
        wBiasWeightList.append(localBiasWeight)                
                
# Write the hidden node bias weights to a file

    wBiasWeightFile = open('C:\Users\chauh\Documents\Susan Data\GB1wBiasWeightFile', 'w') 

    for item in wBiasWeightList:
        wBiasWeightFile.write("%s\n" % item)  
    wBiasWeightFile.close()                            
                                        

# Repeat the process with the output node bias weights
    
# Create a list storing the array values for the output node bias weights
    vBiasWeightList = list()  
    for node in range(outputArrayLength):  #  Number of output nodes
        localBiasWeight = biasOutputWeightArray[node] 
        vBiasWeightList.append(localBiasWeight)                                                      
                                                                          
# Write the output node bias weights to a file

    vBiasWeightFile = open('C:\Users\chauh\Documents\Susan Data\GB1vBiasWeightFile', 'w') 

    for item in vBiasWeightList:
        vBiasWeightFile.write("%s\n" % item)  
    vBiasWeightFile.close()  
                        
    print ' Completed training and storing connection weights to files'

#    print ' for the last training data set:'
#    printLetter(trainingDataList)
    



                                              
####################################################################################################
# Conclude specification of the MAIN procedure
####################################################################################################                
    
if __name__ == "__main__": main()

####################################################################################################
# End program
#################################################################################################### 

